import {
  __commonJS
} from "./chunk-Y2F7D3TJ.js";

// node_modules/bootstrap/dist/js/bootstrap.bundle.min.js
var require_bootstrap_bundle_min = __commonJS({
  "node_modules/bootstrap/dist/js/bootstrap.bundle.min.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).bootstrap = e();
    }(exports, function() {
      "use strict";
      const t = { find: (t2, e2 = document.documentElement) => [].concat(...Element.prototype.querySelectorAll.call(e2, t2)), findOne: (t2, e2 = document.documentElement) => Element.prototype.querySelector.call(e2, t2), children: (t2, e2) => [].concat(...t2.children).filter((t3) => t3.matches(e2)), parents(t2, e2) {
        const i2 = [];
        let n2 = t2.parentNode;
        for (; n2 && n2.nodeType === Node.ELEMENT_NODE && 3 !== n2.nodeType; )
          n2.matches(e2) && i2.push(n2), n2 = n2.parentNode;
        return i2;
      }, prev(t2, e2) {
        let i2 = t2.previousElementSibling;
        for (; i2; ) {
          if (i2.matches(e2))
            return [i2];
          i2 = i2.previousElementSibling;
        }
        return [];
      }, next(t2, e2) {
        let i2 = t2.nextElementSibling;
        for (; i2; ) {
          if (i2.matches(e2))
            return [i2];
          i2 = i2.nextElementSibling;
        }
        return [];
      } }, e = (t2) => {
        do {
          t2 += Math.floor(1e6 * Math.random());
        } while (document.getElementById(t2));
        return t2;
      }, i = (t2) => {
        let e2 = t2.getAttribute("data-bs-target");
        if (!e2 || "#" === e2) {
          let i2 = t2.getAttribute("href");
          if (!i2 || !i2.includes("#") && !i2.startsWith("."))
            return null;
          i2.includes("#") && !i2.startsWith("#") && (i2 = "#" + i2.split("#")[1]), e2 = i2 && "#" !== i2 ? i2.trim() : null;
        }
        return e2;
      }, n = (t2) => {
        const e2 = i(t2);
        return e2 && document.querySelector(e2) ? e2 : null;
      }, s = (t2) => {
        const e2 = i(t2);
        return e2 ? document.querySelector(e2) : null;
      }, o = (t2) => {
        t2.dispatchEvent(new Event("transitionend"));
      }, r = (t2) => !(!t2 || "object" != typeof t2) && (void 0 !== t2.jquery && (t2 = t2[0]), void 0 !== t2.nodeType), a = (e2) => r(e2) ? e2.jquery ? e2[0] : e2 : "string" == typeof e2 && e2.length > 0 ? t.findOne(e2) : null, l = (t2, e2, i2) => {
        Object.keys(i2).forEach((n2) => {
          const s2 = i2[n2], o2 = e2[n2], a2 = o2 && r(o2) ? "element" : null == (l2 = o2) ? "" + l2 : {}.toString.call(l2).match(/\s([a-z]+)/i)[1].toLowerCase();
          var l2;
          if (!new RegExp(s2).test(a2))
            throw new TypeError(`${t2.toUpperCase()}: Option "${n2}" provided type "${a2}" but expected type "${s2}".`);
        });
      }, c = (t2) => !(!r(t2) || 0 === t2.getClientRects().length) && "visible" === getComputedStyle(t2).getPropertyValue("visibility"), h = (t2) => !t2 || t2.nodeType !== Node.ELEMENT_NODE || !!t2.classList.contains("disabled") || (void 0 !== t2.disabled ? t2.disabled : t2.hasAttribute("disabled") && "false" !== t2.getAttribute("disabled")), d = (t2) => {
        if (!document.documentElement.attachShadow)
          return null;
        if ("function" == typeof t2.getRootNode) {
          const e2 = t2.getRootNode();
          return e2 instanceof ShadowRoot ? e2 : null;
        }
        return t2 instanceof ShadowRoot ? t2 : t2.parentNode ? d(t2.parentNode) : null;
      }, u = () => {
      }, f = (t2) => t2.offsetHeight, p = () => {
        const { jQuery: t2 } = window;
        return t2 && !document.body.hasAttribute("data-bs-no-jquery") ? t2 : null;
      }, m = [], g = () => "rtl" === document.documentElement.dir, _ = (t2) => {
        var e2;
        e2 = () => {
          const e3 = p();
          if (e3) {
            const i2 = t2.NAME, n2 = e3.fn[i2];
            e3.fn[i2] = t2.jQueryInterface, e3.fn[i2].Constructor = t2, e3.fn[i2].noConflict = () => (e3.fn[i2] = n2, t2.jQueryInterface);
          }
        }, "loading" === document.readyState ? (m.length || document.addEventListener("DOMContentLoaded", () => {
          m.forEach((t3) => t3());
        }), m.push(e2)) : e2();
      }, b = (t2) => {
        "function" == typeof t2 && t2();
      }, v = (t2, e2, i2 = true) => {
        if (!i2)
          return void b(t2);
        const n2 = ((t3) => {
          if (!t3)
            return 0;
          let { transitionDuration: e3, transitionDelay: i3 } = window.getComputedStyle(t3);
          const n3 = Number.parseFloat(e3), s3 = Number.parseFloat(i3);
          return n3 || s3 ? (e3 = e3.split(",")[0], i3 = i3.split(",")[0], 1e3 * (Number.parseFloat(e3) + Number.parseFloat(i3))) : 0;
        })(e2) + 5;
        let s2 = false;
        const r2 = ({ target: i3 }) => {
          i3 === e2 && (s2 = true, e2.removeEventListener("transitionend", r2), b(t2));
        };
        e2.addEventListener("transitionend", r2), setTimeout(() => {
          s2 || o(e2);
        }, n2);
      }, y = (t2, e2, i2, n2) => {
        let s2 = t2.indexOf(e2);
        if (-1 === s2)
          return t2[!i2 && n2 ? t2.length - 1 : 0];
        const o2 = t2.length;
        return s2 += i2 ? 1 : -1, n2 && (s2 = (s2 + o2) % o2), t2[Math.max(0, Math.min(s2, o2 - 1))];
      }, w = /[^.]*(?=\..*)\.|.*/, E = /\..*/, A = /::\d+$/, T = {};
      let O = 1;
      const C = { mouseenter: "mouseover", mouseleave: "mouseout" }, k = /^(mouseenter|mouseleave)/i, L = /* @__PURE__ */ new Set(["click", "dblclick", "mouseup", "mousedown", "contextmenu", "mousewheel", "DOMMouseScroll", "mouseover", "mouseout", "mousemove", "selectstart", "selectend", "keydown", "keypress", "keyup", "orientationchange", "touchstart", "touchmove", "touchend", "touchcancel", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointercancel", "gesturestart", "gesturechange", "gestureend", "focus", "blur", "change", "reset", "select", "submit", "focusin", "focusout", "load", "unload", "beforeunload", "resize", "move", "DOMContentLoaded", "readystatechange", "error", "abort", "scroll"]);
      function x(t2, e2) {
        return e2 && `${e2}::${O++}` || t2.uidEvent || O++;
      }
      function D(t2) {
        const e2 = x(t2);
        return t2.uidEvent = e2, T[e2] = T[e2] || {}, T[e2];
      }
      function S(t2, e2, i2 = null) {
        const n2 = Object.keys(t2);
        for (let s2 = 0, o2 = n2.length; s2 < o2; s2++) {
          const o3 = t2[n2[s2]];
          if (o3.originalHandler === e2 && o3.delegationSelector === i2)
            return o3;
        }
        return null;
      }
      function I(t2, e2, i2) {
        const n2 = "string" == typeof e2, s2 = n2 ? i2 : e2;
        let o2 = M(t2);
        return L.has(o2) || (o2 = t2), [n2, s2, o2];
      }
      function N(t2, e2, i2, n2, s2) {
        if ("string" != typeof e2 || !t2)
          return;
        if (i2 || (i2 = n2, n2 = null), k.test(e2)) {
          const t3 = (t4) => function(e3) {
            if (!e3.relatedTarget || e3.relatedTarget !== e3.delegateTarget && !e3.delegateTarget.contains(e3.relatedTarget))
              return t4.call(this, e3);
          };
          n2 ? n2 = t3(n2) : i2 = t3(i2);
        }
        const [o2, r2, a2] = I(e2, i2, n2), l2 = D(t2), c2 = l2[a2] || (l2[a2] = {}), h2 = S(c2, r2, o2 ? i2 : null);
        if (h2)
          return void (h2.oneOff = h2.oneOff && s2);
        const d2 = x(r2, e2.replace(w, "")), u2 = o2 ? /* @__PURE__ */ function(t3, e3, i3) {
          return function n3(s3) {
            const o3 = t3.querySelectorAll(e3);
            for (let { target: r3 } = s3; r3 && r3 !== this; r3 = r3.parentNode)
              for (let a3 = o3.length; a3--; )
                if (o3[a3] === r3)
                  return s3.delegateTarget = r3, n3.oneOff && P.off(t3, s3.type, e3, i3), i3.apply(r3, [s3]);
            return null;
          };
        }(t2, i2, n2) : /* @__PURE__ */ function(t3, e3) {
          return function i3(n3) {
            return n3.delegateTarget = t3, i3.oneOff && P.off(t3, n3.type, e3), e3.apply(t3, [n3]);
          };
        }(t2, i2);
        u2.delegationSelector = o2 ? i2 : null, u2.originalHandler = r2, u2.oneOff = s2, u2.uidEvent = d2, c2[d2] = u2, t2.addEventListener(a2, u2, o2);
      }
      function j(t2, e2, i2, n2, s2) {
        const o2 = S(e2[i2], n2, s2);
        o2 && (t2.removeEventListener(i2, o2, Boolean(s2)), delete e2[i2][o2.uidEvent]);
      }
      function M(t2) {
        return t2 = t2.replace(E, ""), C[t2] || t2;
      }
      const P = { on(t2, e2, i2, n2) {
        N(t2, e2, i2, n2, false);
      }, one(t2, e2, i2, n2) {
        N(t2, e2, i2, n2, true);
      }, off(t2, e2, i2, n2) {
        if ("string" != typeof e2 || !t2)
          return;
        const [s2, o2, r2] = I(e2, i2, n2), a2 = r2 !== e2, l2 = D(t2), c2 = e2.startsWith(".");
        if (void 0 !== o2) {
          if (!l2 || !l2[r2])
            return;
          return void j(t2, l2, r2, o2, s2 ? i2 : null);
        }
        c2 && Object.keys(l2).forEach((i3) => {
          !function(t3, e3, i4, n3) {
            const s3 = e3[i4] || {};
            Object.keys(s3).forEach((o3) => {
              if (o3.includes(n3)) {
                const n4 = s3[o3];
                j(t3, e3, i4, n4.originalHandler, n4.delegationSelector);
              }
            });
          }(t2, l2, i3, e2.slice(1));
        });
        const h2 = l2[r2] || {};
        Object.keys(h2).forEach((i3) => {
          const n3 = i3.replace(A, "");
          if (!a2 || e2.includes(n3)) {
            const e3 = h2[i3];
            j(t2, l2, r2, e3.originalHandler, e3.delegationSelector);
          }
        });
      }, trigger(t2, e2, i2) {
        if ("string" != typeof e2 || !t2)
          return null;
        const n2 = p(), s2 = M(e2), o2 = e2 !== s2, r2 = L.has(s2);
        let a2, l2 = true, c2 = true, h2 = false, d2 = null;
        return o2 && n2 && (a2 = n2.Event(e2, i2), n2(t2).trigger(a2), l2 = !a2.isPropagationStopped(), c2 = !a2.isImmediatePropagationStopped(), h2 = a2.isDefaultPrevented()), r2 ? (d2 = document.createEvent("HTMLEvents"), d2.initEvent(s2, l2, true)) : d2 = new CustomEvent(e2, { bubbles: l2, cancelable: true }), void 0 !== i2 && Object.keys(i2).forEach((t3) => {
          Object.defineProperty(d2, t3, { get: () => i2[t3] });
        }), h2 && d2.preventDefault(), c2 && t2.dispatchEvent(d2), d2.defaultPrevented && void 0 !== a2 && a2.preventDefault(), d2;
      } }, H = /* @__PURE__ */ new Map();
      var R = { set(t2, e2, i2) {
        H.has(t2) || H.set(t2, /* @__PURE__ */ new Map());
        const n2 = H.get(t2);
        n2.has(e2) || 0 === n2.size ? n2.set(e2, i2) : console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(n2.keys())[0]}.`);
      }, get: (t2, e2) => H.has(t2) && H.get(t2).get(e2) || null, remove(t2, e2) {
        if (!H.has(t2))
          return;
        const i2 = H.get(t2);
        i2.delete(e2), 0 === i2.size && H.delete(t2);
      } };
      class B {
        constructor(t2) {
          (t2 = a(t2)) && (this._element = t2, R.set(this._element, this.constructor.DATA_KEY, this));
        }
        dispose() {
          R.remove(this._element, this.constructor.DATA_KEY), P.off(this._element, this.constructor.EVENT_KEY), Object.getOwnPropertyNames(this).forEach((t2) => {
            this[t2] = null;
          });
        }
        _queueCallback(t2, e2, i2 = true) {
          v(t2, e2, i2);
        }
        static getInstance(t2) {
          return R.get(t2, this.DATA_KEY);
        }
        static getOrCreateInstance(t2, e2 = {}) {
          return this.getInstance(t2) || new this(t2, "object" == typeof e2 ? e2 : null);
        }
        static get VERSION() {
          return "5.0.2";
        }
        static get NAME() {
          throw new Error('You have to implement the static method "NAME", for each component!');
        }
        static get DATA_KEY() {
          return "bs." + this.NAME;
        }
        static get EVENT_KEY() {
          return "." + this.DATA_KEY;
        }
      }
      class W extends B {
        static get NAME() {
          return "alert";
        }
        close(t2) {
          const e2 = t2 ? this._getRootElement(t2) : this._element, i2 = this._triggerCloseEvent(e2);
          null === i2 || i2.defaultPrevented || this._removeElement(e2);
        }
        _getRootElement(t2) {
          return s(t2) || t2.closest(".alert");
        }
        _triggerCloseEvent(t2) {
          return P.trigger(t2, "close.bs.alert");
        }
        _removeElement(t2) {
          t2.classList.remove("show");
          const e2 = t2.classList.contains("fade");
          this._queueCallback(() => this._destroyElement(t2), t2, e2);
        }
        _destroyElement(t2) {
          t2.remove(), P.trigger(t2, "closed.bs.alert");
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            const e2 = W.getOrCreateInstance(this);
            "close" === t2 && e2[t2](this);
          });
        }
        static handleDismiss(t2) {
          return function(e2) {
            e2 && e2.preventDefault(), t2.close(this);
          };
        }
      }
      P.on(document, "click.bs.alert.data-api", '[data-bs-dismiss="alert"]', W.handleDismiss(new W())), _(W);
      class q extends B {
        static get NAME() {
          return "button";
        }
        toggle() {
          this._element.setAttribute("aria-pressed", this._element.classList.toggle("active"));
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            const e2 = q.getOrCreateInstance(this);
            "toggle" === t2 && e2[t2]();
          });
        }
      }
      function z(t2) {
        return "true" === t2 || "false" !== t2 && (t2 === Number(t2).toString() ? Number(t2) : "" === t2 || "null" === t2 ? null : t2);
      }
      function $(t2) {
        return t2.replace(/[A-Z]/g, (t3) => "-" + t3.toLowerCase());
      }
      P.on(document, "click.bs.button.data-api", '[data-bs-toggle="button"]', (t2) => {
        t2.preventDefault();
        const e2 = t2.target.closest('[data-bs-toggle="button"]');
        q.getOrCreateInstance(e2).toggle();
      }), _(q);
      const U = { setDataAttribute(t2, e2, i2) {
        t2.setAttribute("data-bs-" + $(e2), i2);
      }, removeDataAttribute(t2, e2) {
        t2.removeAttribute("data-bs-" + $(e2));
      }, getDataAttributes(t2) {
        if (!t2)
          return {};
        const e2 = {};
        return Object.keys(t2.dataset).filter((t3) => t3.startsWith("bs")).forEach((i2) => {
          let n2 = i2.replace(/^bs/, "");
          n2 = n2.charAt(0).toLowerCase() + n2.slice(1, n2.length), e2[n2] = z(t2.dataset[i2]);
        }), e2;
      }, getDataAttribute: (t2, e2) => z(t2.getAttribute("data-bs-" + $(e2))), offset(t2) {
        const e2 = t2.getBoundingClientRect();
        return { top: e2.top + document.body.scrollTop, left: e2.left + document.body.scrollLeft };
      }, position: (t2) => ({ top: t2.offsetTop, left: t2.offsetLeft }) }, F = { interval: 5e3, keyboard: true, slide: false, pause: "hover", wrap: true, touch: true }, V = { interval: "(number|boolean)", keyboard: "boolean", slide: "(boolean|string)", pause: "(string|boolean)", wrap: "boolean", touch: "boolean" }, K = "next", X = "prev", Y = "left", Q = "right", G = { ArrowLeft: Q, ArrowRight: Y };
      class Z extends B {
        constructor(e2, i2) {
          super(e2), this._items = null, this._interval = null, this._activeElement = null, this._isPaused = false, this._isSliding = false, this.touchTimeout = null, this.touchStartX = 0, this.touchDeltaX = 0, this._config = this._getConfig(i2), this._indicatorsElement = t.findOne(".carousel-indicators", this._element), this._touchSupported = "ontouchstart" in document.documentElement || navigator.maxTouchPoints > 0, this._pointerEvent = Boolean(window.PointerEvent), this._addEventListeners();
        }
        static get Default() {
          return F;
        }
        static get NAME() {
          return "carousel";
        }
        next() {
          this._slide(K);
        }
        nextWhenVisible() {
          !document.hidden && c(this._element) && this.next();
        }
        prev() {
          this._slide(X);
        }
        pause(e2) {
          e2 || (this._isPaused = true), t.findOne(".carousel-item-next, .carousel-item-prev", this._element) && (o(this._element), this.cycle(true)), clearInterval(this._interval), this._interval = null;
        }
        cycle(t2) {
          t2 || (this._isPaused = false), this._interval && (clearInterval(this._interval), this._interval = null), this._config && this._config.interval && !this._isPaused && (this._updateInterval(), this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval));
        }
        to(e2) {
          this._activeElement = t.findOne(".active.carousel-item", this._element);
          const i2 = this._getItemIndex(this._activeElement);
          if (e2 > this._items.length - 1 || e2 < 0)
            return;
          if (this._isSliding)
            return void P.one(this._element, "slid.bs.carousel", () => this.to(e2));
          if (i2 === e2)
            return this.pause(), void this.cycle();
          const n2 = e2 > i2 ? K : X;
          this._slide(n2, this._items[e2]);
        }
        _getConfig(t2) {
          return t2 = { ...F, ...U.getDataAttributes(this._element), ..."object" == typeof t2 ? t2 : {} }, l("carousel", t2, V), t2;
        }
        _handleSwipe() {
          const t2 = Math.abs(this.touchDeltaX);
          if (t2 <= 40)
            return;
          const e2 = t2 / this.touchDeltaX;
          this.touchDeltaX = 0, e2 && this._slide(e2 > 0 ? Q : Y);
        }
        _addEventListeners() {
          this._config.keyboard && P.on(this._element, "keydown.bs.carousel", (t2) => this._keydown(t2)), "hover" === this._config.pause && (P.on(this._element, "mouseenter.bs.carousel", (t2) => this.pause(t2)), P.on(this._element, "mouseleave.bs.carousel", (t2) => this.cycle(t2))), this._config.touch && this._touchSupported && this._addTouchEventListeners();
        }
        _addTouchEventListeners() {
          const e2 = (t2) => {
            !this._pointerEvent || "pen" !== t2.pointerType && "touch" !== t2.pointerType ? this._pointerEvent || (this.touchStartX = t2.touches[0].clientX) : this.touchStartX = t2.clientX;
          }, i2 = (t2) => {
            this.touchDeltaX = t2.touches && t2.touches.length > 1 ? 0 : t2.touches[0].clientX - this.touchStartX;
          }, n2 = (t2) => {
            !this._pointerEvent || "pen" !== t2.pointerType && "touch" !== t2.pointerType || (this.touchDeltaX = t2.clientX - this.touchStartX), this._handleSwipe(), "hover" === this._config.pause && (this.pause(), this.touchTimeout && clearTimeout(this.touchTimeout), this.touchTimeout = setTimeout((t3) => this.cycle(t3), 500 + this._config.interval));
          };
          t.find(".carousel-item img", this._element).forEach((t2) => {
            P.on(t2, "dragstart.bs.carousel", (t3) => t3.preventDefault());
          }), this._pointerEvent ? (P.on(this._element, "pointerdown.bs.carousel", (t2) => e2(t2)), P.on(this._element, "pointerup.bs.carousel", (t2) => n2(t2)), this._element.classList.add("pointer-event")) : (P.on(this._element, "touchstart.bs.carousel", (t2) => e2(t2)), P.on(this._element, "touchmove.bs.carousel", (t2) => i2(t2)), P.on(this._element, "touchend.bs.carousel", (t2) => n2(t2)));
        }
        _keydown(t2) {
          if (/input|textarea/i.test(t2.target.tagName))
            return;
          const e2 = G[t2.key];
          e2 && (t2.preventDefault(), this._slide(e2));
        }
        _getItemIndex(e2) {
          return this._items = e2 && e2.parentNode ? t.find(".carousel-item", e2.parentNode) : [], this._items.indexOf(e2);
        }
        _getItemByOrder(t2, e2) {
          const i2 = t2 === K;
          return y(this._items, e2, i2, this._config.wrap);
        }
        _triggerSlideEvent(e2, i2) {
          const n2 = this._getItemIndex(e2), s2 = this._getItemIndex(t.findOne(".active.carousel-item", this._element));
          return P.trigger(this._element, "slide.bs.carousel", { relatedTarget: e2, direction: i2, from: s2, to: n2 });
        }
        _setActiveIndicatorElement(e2) {
          if (this._indicatorsElement) {
            const i2 = t.findOne(".active", this._indicatorsElement);
            i2.classList.remove("active"), i2.removeAttribute("aria-current");
            const n2 = t.find("[data-bs-target]", this._indicatorsElement);
            for (let t2 = 0; t2 < n2.length; t2++)
              if (Number.parseInt(n2[t2].getAttribute("data-bs-slide-to"), 10) === this._getItemIndex(e2)) {
                n2[t2].classList.add("active"), n2[t2].setAttribute("aria-current", "true");
                break;
              }
          }
        }
        _updateInterval() {
          const e2 = this._activeElement || t.findOne(".active.carousel-item", this._element);
          if (!e2)
            return;
          const i2 = Number.parseInt(e2.getAttribute("data-bs-interval"), 10);
          i2 ? (this._config.defaultInterval = this._config.defaultInterval || this._config.interval, this._config.interval = i2) : this._config.interval = this._config.defaultInterval || this._config.interval;
        }
        _slide(e2, i2) {
          const n2 = this._directionToOrder(e2), s2 = t.findOne(".active.carousel-item", this._element), o2 = this._getItemIndex(s2), r2 = i2 || this._getItemByOrder(n2, s2), a2 = this._getItemIndex(r2), l2 = Boolean(this._interval), c2 = n2 === K, h2 = c2 ? "carousel-item-start" : "carousel-item-end", d2 = c2 ? "carousel-item-next" : "carousel-item-prev", u2 = this._orderToDirection(n2);
          if (r2 && r2.classList.contains("active"))
            return void (this._isSliding = false);
          if (this._isSliding)
            return;
          if (this._triggerSlideEvent(r2, u2).defaultPrevented)
            return;
          if (!s2 || !r2)
            return;
          this._isSliding = true, l2 && this.pause(), this._setActiveIndicatorElement(r2), this._activeElement = r2;
          const p2 = () => {
            P.trigger(this._element, "slid.bs.carousel", { relatedTarget: r2, direction: u2, from: o2, to: a2 });
          };
          if (this._element.classList.contains("slide")) {
            r2.classList.add(d2), f(r2), s2.classList.add(h2), r2.classList.add(h2);
            const t2 = () => {
              r2.classList.remove(h2, d2), r2.classList.add("active"), s2.classList.remove("active", d2, h2), this._isSliding = false, setTimeout(p2, 0);
            };
            this._queueCallback(t2, s2, true);
          } else
            s2.classList.remove("active"), r2.classList.add("active"), this._isSliding = false, p2();
          l2 && this.cycle();
        }
        _directionToOrder(t2) {
          return [Q, Y].includes(t2) ? g() ? t2 === Y ? X : K : t2 === Y ? K : X : t2;
        }
        _orderToDirection(t2) {
          return [K, X].includes(t2) ? g() ? t2 === X ? Y : Q : t2 === X ? Q : Y : t2;
        }
        static carouselInterface(t2, e2) {
          const i2 = Z.getOrCreateInstance(t2, e2);
          let { _config: n2 } = i2;
          "object" == typeof e2 && (n2 = { ...n2, ...e2 });
          const s2 = "string" == typeof e2 ? e2 : n2.slide;
          if ("number" == typeof e2)
            i2.to(e2);
          else if ("string" == typeof s2) {
            if (void 0 === i2[s2])
              throw new TypeError(`No method named "${s2}"`);
            i2[s2]();
          } else
            n2.interval && n2.ride && (i2.pause(), i2.cycle());
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            Z.carouselInterface(this, t2);
          });
        }
        static dataApiClickHandler(t2) {
          const e2 = s(this);
          if (!e2 || !e2.classList.contains("carousel"))
            return;
          const i2 = { ...U.getDataAttributes(e2), ...U.getDataAttributes(this) }, n2 = this.getAttribute("data-bs-slide-to");
          n2 && (i2.interval = false), Z.carouselInterface(e2, i2), n2 && Z.getInstance(e2).to(n2), t2.preventDefault();
        }
      }
      P.on(document, "click.bs.carousel.data-api", "[data-bs-slide], [data-bs-slide-to]", Z.dataApiClickHandler), P.on(window, "load.bs.carousel.data-api", () => {
        const e2 = t.find('[data-bs-ride="carousel"]');
        for (let t2 = 0, i2 = e2.length; t2 < i2; t2++)
          Z.carouselInterface(e2[t2], Z.getInstance(e2[t2]));
      }), _(Z);
      const J = { toggle: true, parent: "" }, tt = { toggle: "boolean", parent: "(string|element)" };
      class et extends B {
        constructor(e2, i2) {
          super(e2), this._isTransitioning = false, this._config = this._getConfig(i2), this._triggerArray = t.find(`[data-bs-toggle="collapse"][href="#${this._element.id}"],[data-bs-toggle="collapse"][data-bs-target="#${this._element.id}"]`);
          const s2 = t.find('[data-bs-toggle="collapse"]');
          for (let e3 = 0, i3 = s2.length; e3 < i3; e3++) {
            const i4 = s2[e3], o2 = n(i4), r2 = t.find(o2).filter((t2) => t2 === this._element);
            null !== o2 && r2.length && (this._selector = o2, this._triggerArray.push(i4));
          }
          this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle();
        }
        static get Default() {
          return J;
        }
        static get NAME() {
          return "collapse";
        }
        toggle() {
          this._element.classList.contains("show") ? this.hide() : this.show();
        }
        show() {
          if (this._isTransitioning || this._element.classList.contains("show"))
            return;
          let e2, i2;
          this._parent && (e2 = t.find(".show, .collapsing", this._parent).filter((t2) => "string" == typeof this._config.parent ? t2.getAttribute("data-bs-parent") === this._config.parent : t2.classList.contains("collapse")), 0 === e2.length && (e2 = null));
          const n2 = t.findOne(this._selector);
          if (e2) {
            const t2 = e2.find((t3) => n2 !== t3);
            if (i2 = t2 ? et.getInstance(t2) : null, i2 && i2._isTransitioning)
              return;
          }
          if (P.trigger(this._element, "show.bs.collapse").defaultPrevented)
            return;
          e2 && e2.forEach((t2) => {
            n2 !== t2 && et.collapseInterface(t2, "hide"), i2 || R.set(t2, "bs.collapse", null);
          });
          const s2 = this._getDimension();
          this._element.classList.remove("collapse"), this._element.classList.add("collapsing"), this._element.style[s2] = 0, this._triggerArray.length && this._triggerArray.forEach((t2) => {
            t2.classList.remove("collapsed"), t2.setAttribute("aria-expanded", true);
          }), this.setTransitioning(true);
          const o2 = "scroll" + (s2[0].toUpperCase() + s2.slice(1));
          this._queueCallback(() => {
            this._element.classList.remove("collapsing"), this._element.classList.add("collapse", "show"), this._element.style[s2] = "", this.setTransitioning(false), P.trigger(this._element, "shown.bs.collapse");
          }, this._element, true), this._element.style[s2] = this._element[o2] + "px";
        }
        hide() {
          if (this._isTransitioning || !this._element.classList.contains("show"))
            return;
          if (P.trigger(this._element, "hide.bs.collapse").defaultPrevented)
            return;
          const t2 = this._getDimension();
          this._element.style[t2] = this._element.getBoundingClientRect()[t2] + "px", f(this._element), this._element.classList.add("collapsing"), this._element.classList.remove("collapse", "show");
          const e2 = this._triggerArray.length;
          if (e2 > 0)
            for (let t3 = 0; t3 < e2; t3++) {
              const e3 = this._triggerArray[t3], i2 = s(e3);
              i2 && !i2.classList.contains("show") && (e3.classList.add("collapsed"), e3.setAttribute("aria-expanded", false));
            }
          this.setTransitioning(true), this._element.style[t2] = "", this._queueCallback(() => {
            this.setTransitioning(false), this._element.classList.remove("collapsing"), this._element.classList.add("collapse"), P.trigger(this._element, "hidden.bs.collapse");
          }, this._element, true);
        }
        setTransitioning(t2) {
          this._isTransitioning = t2;
        }
        _getConfig(t2) {
          return (t2 = { ...J, ...t2 }).toggle = Boolean(t2.toggle), l("collapse", t2, tt), t2;
        }
        _getDimension() {
          return this._element.classList.contains("width") ? "width" : "height";
        }
        _getParent() {
          let { parent: e2 } = this._config;
          e2 = a(e2);
          const i2 = `[data-bs-toggle="collapse"][data-bs-parent="${e2}"]`;
          return t.find(i2, e2).forEach((t2) => {
            const e3 = s(t2);
            this._addAriaAndCollapsedClass(e3, [t2]);
          }), e2;
        }
        _addAriaAndCollapsedClass(t2, e2) {
          if (!t2 || !e2.length)
            return;
          const i2 = t2.classList.contains("show");
          e2.forEach((t3) => {
            i2 ? t3.classList.remove("collapsed") : t3.classList.add("collapsed"), t3.setAttribute("aria-expanded", i2);
          });
        }
        static collapseInterface(t2, e2) {
          let i2 = et.getInstance(t2);
          const n2 = { ...J, ...U.getDataAttributes(t2), ..."object" == typeof e2 && e2 ? e2 : {} };
          if (!i2 && n2.toggle && "string" == typeof e2 && /show|hide/.test(e2) && (n2.toggle = false), i2 || (i2 = new et(t2, n2)), "string" == typeof e2) {
            if (void 0 === i2[e2])
              throw new TypeError(`No method named "${e2}"`);
            i2[e2]();
          }
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            et.collapseInterface(this, t2);
          });
        }
      }
      P.on(document, "click.bs.collapse.data-api", '[data-bs-toggle="collapse"]', function(e2) {
        ("A" === e2.target.tagName || e2.delegateTarget && "A" === e2.delegateTarget.tagName) && e2.preventDefault();
        const i2 = U.getDataAttributes(this), s2 = n(this);
        t.find(s2).forEach((t2) => {
          const e3 = et.getInstance(t2);
          let n2;
          e3 ? (null === e3._parent && "string" == typeof i2.parent && (e3._config.parent = i2.parent, e3._parent = e3._getParent()), n2 = "toggle") : n2 = i2, et.collapseInterface(t2, n2);
        });
      }), _(et);
      var it = "top", nt = "bottom", st = "right", ot = "left", rt = [it, nt, st, ot], at = rt.reduce(function(t2, e2) {
        return t2.concat([e2 + "-start", e2 + "-end"]);
      }, []), lt = [].concat(rt, ["auto"]).reduce(function(t2, e2) {
        return t2.concat([e2, e2 + "-start", e2 + "-end"]);
      }, []), ct = ["beforeRead", "read", "afterRead", "beforeMain", "main", "afterMain", "beforeWrite", "write", "afterWrite"];
      function ht(t2) {
        return t2 ? (t2.nodeName || "").toLowerCase() : null;
      }
      function dt(t2) {
        if (null == t2)
          return window;
        if ("[object Window]" !== t2.toString()) {
          var e2 = t2.ownerDocument;
          return e2 && e2.defaultView || window;
        }
        return t2;
      }
      function ut(t2) {
        return t2 instanceof dt(t2).Element || t2 instanceof Element;
      }
      function ft(t2) {
        return t2 instanceof dt(t2).HTMLElement || t2 instanceof HTMLElement;
      }
      function pt(t2) {
        return "undefined" != typeof ShadowRoot && (t2 instanceof dt(t2).ShadowRoot || t2 instanceof ShadowRoot);
      }
      var mt = { name: "applyStyles", enabled: true, phase: "write", fn: function(t2) {
        var e2 = t2.state;
        Object.keys(e2.elements).forEach(function(t3) {
          var i2 = e2.styles[t3] || {}, n2 = e2.attributes[t3] || {}, s2 = e2.elements[t3];
          ft(s2) && ht(s2) && (Object.assign(s2.style, i2), Object.keys(n2).forEach(function(t4) {
            var e3 = n2[t4];
            false === e3 ? s2.removeAttribute(t4) : s2.setAttribute(t4, true === e3 ? "" : e3);
          }));
        });
      }, effect: function(t2) {
        var e2 = t2.state, i2 = { popper: { position: e2.options.strategy, left: "0", top: "0", margin: "0" }, arrow: { position: "absolute" }, reference: {} };
        return Object.assign(e2.elements.popper.style, i2.popper), e2.styles = i2, e2.elements.arrow && Object.assign(e2.elements.arrow.style, i2.arrow), function() {
          Object.keys(e2.elements).forEach(function(t3) {
            var n2 = e2.elements[t3], s2 = e2.attributes[t3] || {}, o2 = Object.keys(e2.styles.hasOwnProperty(t3) ? e2.styles[t3] : i2[t3]).reduce(function(t4, e3) {
              return t4[e3] = "", t4;
            }, {});
            ft(n2) && ht(n2) && (Object.assign(n2.style, o2), Object.keys(s2).forEach(function(t4) {
              n2.removeAttribute(t4);
            }));
          });
        };
      }, requires: ["computeStyles"] };
      function gt(t2) {
        return t2.split("-")[0];
      }
      function _t(t2) {
        var e2 = t2.getBoundingClientRect();
        return { width: e2.width, height: e2.height, top: e2.top, right: e2.right, bottom: e2.bottom, left: e2.left, x: e2.left, y: e2.top };
      }
      function bt(t2) {
        var e2 = _t(t2), i2 = t2.offsetWidth, n2 = t2.offsetHeight;
        return Math.abs(e2.width - i2) <= 1 && (i2 = e2.width), Math.abs(e2.height - n2) <= 1 && (n2 = e2.height), { x: t2.offsetLeft, y: t2.offsetTop, width: i2, height: n2 };
      }
      function vt(t2, e2) {
        var i2 = e2.getRootNode && e2.getRootNode();
        if (t2.contains(e2))
          return true;
        if (i2 && pt(i2)) {
          var n2 = e2;
          do {
            if (n2 && t2.isSameNode(n2))
              return true;
            n2 = n2.parentNode || n2.host;
          } while (n2);
        }
        return false;
      }
      function yt(t2) {
        return dt(t2).getComputedStyle(t2);
      }
      function wt(t2) {
        return ["table", "td", "th"].indexOf(ht(t2)) >= 0;
      }
      function Et(t2) {
        return ((ut(t2) ? t2.ownerDocument : t2.document) || window.document).documentElement;
      }
      function At(t2) {
        return "html" === ht(t2) ? t2 : t2.assignedSlot || t2.parentNode || (pt(t2) ? t2.host : null) || Et(t2);
      }
      function Tt(t2) {
        return ft(t2) && "fixed" !== yt(t2).position ? t2.offsetParent : null;
      }
      function Ot(t2) {
        for (var e2 = dt(t2), i2 = Tt(t2); i2 && wt(i2) && "static" === yt(i2).position; )
          i2 = Tt(i2);
        return i2 && ("html" === ht(i2) || "body" === ht(i2) && "static" === yt(i2).position) ? e2 : i2 || function(t3) {
          var e3 = -1 !== navigator.userAgent.toLowerCase().indexOf("firefox");
          if (-1 !== navigator.userAgent.indexOf("Trident") && ft(t3) && "fixed" === yt(t3).position)
            return null;
          for (var i3 = At(t3); ft(i3) && ["html", "body"].indexOf(ht(i3)) < 0; ) {
            var n2 = yt(i3);
            if ("none" !== n2.transform || "none" !== n2.perspective || "paint" === n2.contain || -1 !== ["transform", "perspective"].indexOf(n2.willChange) || e3 && "filter" === n2.willChange || e3 && n2.filter && "none" !== n2.filter)
              return i3;
            i3 = i3.parentNode;
          }
          return null;
        }(t2) || e2;
      }
      function Ct(t2) {
        return ["top", "bottom"].indexOf(t2) >= 0 ? "x" : "y";
      }
      var kt = Math.max, Lt = Math.min, xt = Math.round;
      function Dt(t2, e2, i2) {
        return kt(t2, Lt(e2, i2));
      }
      function St(t2) {
        return Object.assign({}, { top: 0, right: 0, bottom: 0, left: 0 }, t2);
      }
      function It(t2, e2) {
        return e2.reduce(function(e3, i2) {
          return e3[i2] = t2, e3;
        }, {});
      }
      var Nt = { name: "arrow", enabled: true, phase: "main", fn: function(t2) {
        var e2, i2 = t2.state, n2 = t2.name, s2 = t2.options, o2 = i2.elements.arrow, r2 = i2.modifiersData.popperOffsets, a2 = gt(i2.placement), l2 = Ct(a2), c2 = [ot, st].indexOf(a2) >= 0 ? "height" : "width";
        if (o2 && r2) {
          var h2 = function(t3, e3) {
            return St("number" != typeof (t3 = "function" == typeof t3 ? t3(Object.assign({}, e3.rects, { placement: e3.placement })) : t3) ? t3 : It(t3, rt));
          }(s2.padding, i2), d2 = bt(o2), u2 = "y" === l2 ? it : ot, f2 = "y" === l2 ? nt : st, p2 = i2.rects.reference[c2] + i2.rects.reference[l2] - r2[l2] - i2.rects.popper[c2], m2 = r2[l2] - i2.rects.reference[l2], g2 = Ot(o2), _2 = g2 ? "y" === l2 ? g2.clientHeight || 0 : g2.clientWidth || 0 : 0, b2 = p2 / 2 - m2 / 2, v2 = h2[u2], y2 = _2 - d2[c2] - h2[f2], w2 = _2 / 2 - d2[c2] / 2 + b2, E2 = Dt(v2, w2, y2), A2 = l2;
          i2.modifiersData[n2] = ((e2 = {})[A2] = E2, e2.centerOffset = E2 - w2, e2);
        }
      }, effect: function(t2) {
        var e2 = t2.state, i2 = t2.options.element, n2 = void 0 === i2 ? "[data-popper-arrow]" : i2;
        null != n2 && ("string" != typeof n2 || (n2 = e2.elements.popper.querySelector(n2))) && vt(e2.elements.popper, n2) && (e2.elements.arrow = n2);
      }, requires: ["popperOffsets"], requiresIfExists: ["preventOverflow"] }, jt = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
      function Mt(t2) {
        var e2, i2 = t2.popper, n2 = t2.popperRect, s2 = t2.placement, o2 = t2.offsets, r2 = t2.position, a2 = t2.gpuAcceleration, l2 = t2.adaptive, c2 = t2.roundOffsets, h2 = true === c2 ? function(t3) {
          var e3 = t3.x, i3 = t3.y, n3 = window.devicePixelRatio || 1;
          return { x: xt(xt(e3 * n3) / n3) || 0, y: xt(xt(i3 * n3) / n3) || 0 };
        }(o2) : "function" == typeof c2 ? c2(o2) : o2, d2 = h2.x, u2 = void 0 === d2 ? 0 : d2, f2 = h2.y, p2 = void 0 === f2 ? 0 : f2, m2 = o2.hasOwnProperty("x"), g2 = o2.hasOwnProperty("y"), _2 = ot, b2 = it, v2 = window;
        if (l2) {
          var y2 = Ot(i2), w2 = "clientHeight", E2 = "clientWidth";
          y2 === dt(i2) && "static" !== yt(y2 = Et(i2)).position && (w2 = "scrollHeight", E2 = "scrollWidth"), y2 = y2, s2 === it && (b2 = nt, p2 -= y2[w2] - n2.height, p2 *= a2 ? 1 : -1), s2 === ot && (_2 = st, u2 -= y2[E2] - n2.width, u2 *= a2 ? 1 : -1);
        }
        var A2, T2 = Object.assign({ position: r2 }, l2 && jt);
        return a2 ? Object.assign({}, T2, ((A2 = {})[b2] = g2 ? "0" : "", A2[_2] = m2 ? "0" : "", A2.transform = (v2.devicePixelRatio || 1) < 2 ? "translate(" + u2 + "px, " + p2 + "px)" : "translate3d(" + u2 + "px, " + p2 + "px, 0)", A2)) : Object.assign({}, T2, ((e2 = {})[b2] = g2 ? p2 + "px" : "", e2[_2] = m2 ? u2 + "px" : "", e2.transform = "", e2));
      }
      var Pt = { name: "computeStyles", enabled: true, phase: "beforeWrite", fn: function(t2) {
        var e2 = t2.state, i2 = t2.options, n2 = i2.gpuAcceleration, s2 = void 0 === n2 || n2, o2 = i2.adaptive, r2 = void 0 === o2 || o2, a2 = i2.roundOffsets, l2 = void 0 === a2 || a2, c2 = { placement: gt(e2.placement), popper: e2.elements.popper, popperRect: e2.rects.popper, gpuAcceleration: s2 };
        null != e2.modifiersData.popperOffsets && (e2.styles.popper = Object.assign({}, e2.styles.popper, Mt(Object.assign({}, c2, { offsets: e2.modifiersData.popperOffsets, position: e2.options.strategy, adaptive: r2, roundOffsets: l2 })))), null != e2.modifiersData.arrow && (e2.styles.arrow = Object.assign({}, e2.styles.arrow, Mt(Object.assign({}, c2, { offsets: e2.modifiersData.arrow, position: "absolute", adaptive: false, roundOffsets: l2 })))), e2.attributes.popper = Object.assign({}, e2.attributes.popper, { "data-popper-placement": e2.placement });
      }, data: {} }, Ht = { passive: true }, Rt = { name: "eventListeners", enabled: true, phase: "write", fn: function() {
      }, effect: function(t2) {
        var e2 = t2.state, i2 = t2.instance, n2 = t2.options, s2 = n2.scroll, o2 = void 0 === s2 || s2, r2 = n2.resize, a2 = void 0 === r2 || r2, l2 = dt(e2.elements.popper), c2 = [].concat(e2.scrollParents.reference, e2.scrollParents.popper);
        return o2 && c2.forEach(function(t3) {
          t3.addEventListener("scroll", i2.update, Ht);
        }), a2 && l2.addEventListener("resize", i2.update, Ht), function() {
          o2 && c2.forEach(function(t3) {
            t3.removeEventListener("scroll", i2.update, Ht);
          }), a2 && l2.removeEventListener("resize", i2.update, Ht);
        };
      }, data: {} }, Bt = { left: "right", right: "left", bottom: "top", top: "bottom" };
      function Wt(t2) {
        return t2.replace(/left|right|bottom|top/g, function(t3) {
          return Bt[t3];
        });
      }
      var qt = { start: "end", end: "start" };
      function zt(t2) {
        return t2.replace(/start|end/g, function(t3) {
          return qt[t3];
        });
      }
      function $t(t2) {
        var e2 = dt(t2);
        return { scrollLeft: e2.pageXOffset, scrollTop: e2.pageYOffset };
      }
      function Ut(t2) {
        return _t(Et(t2)).left + $t(t2).scrollLeft;
      }
      function Ft(t2) {
        var e2 = yt(t2), i2 = e2.overflow, n2 = e2.overflowX, s2 = e2.overflowY;
        return /auto|scroll|overlay|hidden/.test(i2 + s2 + n2);
      }
      function Vt(t2, e2) {
        var i2;
        void 0 === e2 && (e2 = []);
        var n2 = function t3(e3) {
          return ["html", "body", "#document"].indexOf(ht(e3)) >= 0 ? e3.ownerDocument.body : ft(e3) && Ft(e3) ? e3 : t3(At(e3));
        }(t2), s2 = n2 === (null == (i2 = t2.ownerDocument) ? void 0 : i2.body), o2 = dt(n2), r2 = s2 ? [o2].concat(o2.visualViewport || [], Ft(n2) ? n2 : []) : n2, a2 = e2.concat(r2);
        return s2 ? a2 : a2.concat(Vt(At(r2)));
      }
      function Kt(t2) {
        return Object.assign({}, t2, { left: t2.x, top: t2.y, right: t2.x + t2.width, bottom: t2.y + t2.height });
      }
      function Xt(t2, e2) {
        return "viewport" === e2 ? Kt(function(t3) {
          var e3 = dt(t3), i2 = Et(t3), n2 = e3.visualViewport, s2 = i2.clientWidth, o2 = i2.clientHeight, r2 = 0, a2 = 0;
          return n2 && (s2 = n2.width, o2 = n2.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (r2 = n2.offsetLeft, a2 = n2.offsetTop)), { width: s2, height: o2, x: r2 + Ut(t3), y: a2 };
        }(t2)) : ft(e2) ? function(t3) {
          var e3 = _t(t3);
          return e3.top = e3.top + t3.clientTop, e3.left = e3.left + t3.clientLeft, e3.bottom = e3.top + t3.clientHeight, e3.right = e3.left + t3.clientWidth, e3.width = t3.clientWidth, e3.height = t3.clientHeight, e3.x = e3.left, e3.y = e3.top, e3;
        }(e2) : Kt(function(t3) {
          var e3, i2 = Et(t3), n2 = $t(t3), s2 = null == (e3 = t3.ownerDocument) ? void 0 : e3.body, o2 = kt(i2.scrollWidth, i2.clientWidth, s2 ? s2.scrollWidth : 0, s2 ? s2.clientWidth : 0), r2 = kt(i2.scrollHeight, i2.clientHeight, s2 ? s2.scrollHeight : 0, s2 ? s2.clientHeight : 0), a2 = -n2.scrollLeft + Ut(t3), l2 = -n2.scrollTop;
          return "rtl" === yt(s2 || i2).direction && (a2 += kt(i2.clientWidth, s2 ? s2.clientWidth : 0) - o2), { width: o2, height: r2, x: a2, y: l2 };
        }(Et(t2)));
      }
      function Yt(t2) {
        return t2.split("-")[1];
      }
      function Qt(t2) {
        var e2, i2 = t2.reference, n2 = t2.element, s2 = t2.placement, o2 = s2 ? gt(s2) : null, r2 = s2 ? Yt(s2) : null, a2 = i2.x + i2.width / 2 - n2.width / 2, l2 = i2.y + i2.height / 2 - n2.height / 2;
        switch (o2) {
          case it:
            e2 = { x: a2, y: i2.y - n2.height };
            break;
          case nt:
            e2 = { x: a2, y: i2.y + i2.height };
            break;
          case st:
            e2 = { x: i2.x + i2.width, y: l2 };
            break;
          case ot:
            e2 = { x: i2.x - n2.width, y: l2 };
            break;
          default:
            e2 = { x: i2.x, y: i2.y };
        }
        var c2 = o2 ? Ct(o2) : null;
        if (null != c2) {
          var h2 = "y" === c2 ? "height" : "width";
          switch (r2) {
            case "start":
              e2[c2] = e2[c2] - (i2[h2] / 2 - n2[h2] / 2);
              break;
            case "end":
              e2[c2] = e2[c2] + (i2[h2] / 2 - n2[h2] / 2);
          }
        }
        return e2;
      }
      function Gt(t2, e2) {
        void 0 === e2 && (e2 = {});
        var i2 = e2, n2 = i2.placement, s2 = void 0 === n2 ? t2.placement : n2, o2 = i2.boundary, r2 = void 0 === o2 ? "clippingParents" : o2, a2 = i2.rootBoundary, l2 = void 0 === a2 ? "viewport" : a2, c2 = i2.elementContext, h2 = void 0 === c2 ? "popper" : c2, d2 = i2.altBoundary, u2 = void 0 !== d2 && d2, f2 = i2.padding, p2 = void 0 === f2 ? 0 : f2, m2 = St("number" != typeof p2 ? p2 : It(p2, rt)), g2 = "popper" === h2 ? "reference" : "popper", _2 = t2.elements.reference, b2 = t2.rects.popper, v2 = t2.elements[u2 ? g2 : h2], y2 = function(t3, e3, i3) {
          var n3 = "clippingParents" === e3 ? function(t4) {
            var e4 = Vt(At(t4)), i4 = ["absolute", "fixed"].indexOf(yt(t4).position) >= 0 && ft(t4) ? Ot(t4) : t4;
            return ut(i4) ? e4.filter(function(t5) {
              return ut(t5) && vt(t5, i4) && "body" !== ht(t5);
            }) : [];
          }(t3) : [].concat(e3), s3 = [].concat(n3, [i3]), o3 = s3[0], r3 = s3.reduce(function(e4, i4) {
            var n4 = Xt(t3, i4);
            return e4.top = kt(n4.top, e4.top), e4.right = Lt(n4.right, e4.right), e4.bottom = Lt(n4.bottom, e4.bottom), e4.left = kt(n4.left, e4.left), e4;
          }, Xt(t3, o3));
          return r3.width = r3.right - r3.left, r3.height = r3.bottom - r3.top, r3.x = r3.left, r3.y = r3.top, r3;
        }(ut(v2) ? v2 : v2.contextElement || Et(t2.elements.popper), r2, l2), w2 = _t(_2), E2 = Qt({ reference: w2, element: b2, strategy: "absolute", placement: s2 }), A2 = Kt(Object.assign({}, b2, E2)), T2 = "popper" === h2 ? A2 : w2, O2 = { top: y2.top - T2.top + m2.top, bottom: T2.bottom - y2.bottom + m2.bottom, left: y2.left - T2.left + m2.left, right: T2.right - y2.right + m2.right }, C2 = t2.modifiersData.offset;
        if ("popper" === h2 && C2) {
          var k2 = C2[s2];
          Object.keys(O2).forEach(function(t3) {
            var e3 = [st, nt].indexOf(t3) >= 0 ? 1 : -1, i3 = [it, nt].indexOf(t3) >= 0 ? "y" : "x";
            O2[t3] += k2[i3] * e3;
          });
        }
        return O2;
      }
      function Zt(t2, e2) {
        void 0 === e2 && (e2 = {});
        var i2 = e2, n2 = i2.placement, s2 = i2.boundary, o2 = i2.rootBoundary, r2 = i2.padding, a2 = i2.flipVariations, l2 = i2.allowedAutoPlacements, c2 = void 0 === l2 ? lt : l2, h2 = Yt(n2), d2 = h2 ? a2 ? at : at.filter(function(t3) {
          return Yt(t3) === h2;
        }) : rt, u2 = d2.filter(function(t3) {
          return c2.indexOf(t3) >= 0;
        });
        0 === u2.length && (u2 = d2);
        var f2 = u2.reduce(function(e3, i3) {
          return e3[i3] = Gt(t2, { placement: i3, boundary: s2, rootBoundary: o2, padding: r2 })[gt(i3)], e3;
        }, {});
        return Object.keys(f2).sort(function(t3, e3) {
          return f2[t3] - f2[e3];
        });
      }
      var Jt = { name: "flip", enabled: true, phase: "main", fn: function(t2) {
        var e2 = t2.state, i2 = t2.options, n2 = t2.name;
        if (!e2.modifiersData[n2]._skip) {
          for (var s2 = i2.mainAxis, o2 = void 0 === s2 || s2, r2 = i2.altAxis, a2 = void 0 === r2 || r2, l2 = i2.fallbackPlacements, c2 = i2.padding, h2 = i2.boundary, d2 = i2.rootBoundary, u2 = i2.altBoundary, f2 = i2.flipVariations, p2 = void 0 === f2 || f2, m2 = i2.allowedAutoPlacements, g2 = e2.options.placement, _2 = gt(g2), b2 = l2 || (_2 !== g2 && p2 ? function(t3) {
            if ("auto" === gt(t3))
              return [];
            var e3 = Wt(t3);
            return [zt(t3), e3, zt(e3)];
          }(g2) : [Wt(g2)]), v2 = [g2].concat(b2).reduce(function(t3, i3) {
            return t3.concat("auto" === gt(i3) ? Zt(e2, { placement: i3, boundary: h2, rootBoundary: d2, padding: c2, flipVariations: p2, allowedAutoPlacements: m2 }) : i3);
          }, []), y2 = e2.rects.reference, w2 = e2.rects.popper, E2 = /* @__PURE__ */ new Map(), A2 = true, T2 = v2[0], O2 = 0; O2 < v2.length; O2++) {
            var C2 = v2[O2], k2 = gt(C2), L2 = "start" === Yt(C2), x2 = [it, nt].indexOf(k2) >= 0, D2 = x2 ? "width" : "height", S2 = Gt(e2, { placement: C2, boundary: h2, rootBoundary: d2, altBoundary: u2, padding: c2 }), I2 = x2 ? L2 ? st : ot : L2 ? nt : it;
            y2[D2] > w2[D2] && (I2 = Wt(I2));
            var N2 = Wt(I2), j2 = [];
            if (o2 && j2.push(S2[k2] <= 0), a2 && j2.push(S2[I2] <= 0, S2[N2] <= 0), j2.every(function(t3) {
              return t3;
            })) {
              T2 = C2, A2 = false;
              break;
            }
            E2.set(C2, j2);
          }
          if (A2)
            for (var M2 = function(t3) {
              var e3 = v2.find(function(e4) {
                var i3 = E2.get(e4);
                if (i3)
                  return i3.slice(0, t3).every(function(t4) {
                    return t4;
                  });
              });
              if (e3)
                return T2 = e3, "break";
            }, P2 = p2 ? 3 : 1; P2 > 0 && "break" !== M2(P2); P2--)
              ;
          e2.placement !== T2 && (e2.modifiersData[n2]._skip = true, e2.placement = T2, e2.reset = true);
        }
      }, requiresIfExists: ["offset"], data: { _skip: false } };
      function te(t2, e2, i2) {
        return void 0 === i2 && (i2 = { x: 0, y: 0 }), { top: t2.top - e2.height - i2.y, right: t2.right - e2.width + i2.x, bottom: t2.bottom - e2.height + i2.y, left: t2.left - e2.width - i2.x };
      }
      function ee(t2) {
        return [it, st, nt, ot].some(function(e2) {
          return t2[e2] >= 0;
        });
      }
      var ie = { name: "hide", enabled: true, phase: "main", requiresIfExists: ["preventOverflow"], fn: function(t2) {
        var e2 = t2.state, i2 = t2.name, n2 = e2.rects.reference, s2 = e2.rects.popper, o2 = e2.modifiersData.preventOverflow, r2 = Gt(e2, { elementContext: "reference" }), a2 = Gt(e2, { altBoundary: true }), l2 = te(r2, n2), c2 = te(a2, s2, o2), h2 = ee(l2), d2 = ee(c2);
        e2.modifiersData[i2] = { referenceClippingOffsets: l2, popperEscapeOffsets: c2, isReferenceHidden: h2, hasPopperEscaped: d2 }, e2.attributes.popper = Object.assign({}, e2.attributes.popper, { "data-popper-reference-hidden": h2, "data-popper-escaped": d2 });
      } }, ne = { name: "offset", enabled: true, phase: "main", requires: ["popperOffsets"], fn: function(t2) {
        var e2 = t2.state, i2 = t2.options, n2 = t2.name, s2 = i2.offset, o2 = void 0 === s2 ? [0, 0] : s2, r2 = lt.reduce(function(t3, i3) {
          return t3[i3] = function(t4, e3, i4) {
            var n3 = gt(t4), s3 = [ot, it].indexOf(n3) >= 0 ? -1 : 1, o3 = "function" == typeof i4 ? i4(Object.assign({}, e3, { placement: t4 })) : i4, r3 = o3[0], a3 = o3[1];
            return r3 = r3 || 0, a3 = (a3 || 0) * s3, [ot, st].indexOf(n3) >= 0 ? { x: a3, y: r3 } : { x: r3, y: a3 };
          }(i3, e2.rects, o2), t3;
        }, {}), a2 = r2[e2.placement], l2 = a2.x, c2 = a2.y;
        null != e2.modifiersData.popperOffsets && (e2.modifiersData.popperOffsets.x += l2, e2.modifiersData.popperOffsets.y += c2), e2.modifiersData[n2] = r2;
      } }, se = { name: "popperOffsets", enabled: true, phase: "read", fn: function(t2) {
        var e2 = t2.state, i2 = t2.name;
        e2.modifiersData[i2] = Qt({ reference: e2.rects.reference, element: e2.rects.popper, strategy: "absolute", placement: e2.placement });
      }, data: {} }, oe = { name: "preventOverflow", enabled: true, phase: "main", fn: function(t2) {
        var e2 = t2.state, i2 = t2.options, n2 = t2.name, s2 = i2.mainAxis, o2 = void 0 === s2 || s2, r2 = i2.altAxis, a2 = void 0 !== r2 && r2, l2 = i2.boundary, c2 = i2.rootBoundary, h2 = i2.altBoundary, d2 = i2.padding, u2 = i2.tether, f2 = void 0 === u2 || u2, p2 = i2.tetherOffset, m2 = void 0 === p2 ? 0 : p2, g2 = Gt(e2, { boundary: l2, rootBoundary: c2, padding: d2, altBoundary: h2 }), _2 = gt(e2.placement), b2 = Yt(e2.placement), v2 = !b2, y2 = Ct(_2), w2 = "x" === y2 ? "y" : "x", E2 = e2.modifiersData.popperOffsets, A2 = e2.rects.reference, T2 = e2.rects.popper, O2 = "function" == typeof m2 ? m2(Object.assign({}, e2.rects, { placement: e2.placement })) : m2, C2 = { x: 0, y: 0 };
        if (E2) {
          if (o2 || a2) {
            var k2 = "y" === y2 ? it : ot, L2 = "y" === y2 ? nt : st, x2 = "y" === y2 ? "height" : "width", D2 = E2[y2], S2 = E2[y2] + g2[k2], I2 = E2[y2] - g2[L2], N2 = f2 ? -T2[x2] / 2 : 0, j2 = "start" === b2 ? A2[x2] : T2[x2], M2 = "start" === b2 ? -T2[x2] : -A2[x2], P2 = e2.elements.arrow, H2 = f2 && P2 ? bt(P2) : { width: 0, height: 0 }, R2 = e2.modifiersData["arrow#persistent"] ? e2.modifiersData["arrow#persistent"].padding : { top: 0, right: 0, bottom: 0, left: 0 }, B2 = R2[k2], W2 = R2[L2], q2 = Dt(0, A2[x2], H2[x2]), z2 = v2 ? A2[x2] / 2 - N2 - q2 - B2 - O2 : j2 - q2 - B2 - O2, $2 = v2 ? -A2[x2] / 2 + N2 + q2 + W2 + O2 : M2 + q2 + W2 + O2, U2 = e2.elements.arrow && Ot(e2.elements.arrow), F2 = U2 ? "y" === y2 ? U2.clientTop || 0 : U2.clientLeft || 0 : 0, V2 = e2.modifiersData.offset ? e2.modifiersData.offset[e2.placement][y2] : 0, K2 = E2[y2] + z2 - V2 - F2, X2 = E2[y2] + $2 - V2;
            if (o2) {
              var Y2 = Dt(f2 ? Lt(S2, K2) : S2, D2, f2 ? kt(I2, X2) : I2);
              E2[y2] = Y2, C2[y2] = Y2 - D2;
            }
            if (a2) {
              var Q2 = "x" === y2 ? it : ot, G2 = "x" === y2 ? nt : st, Z2 = E2[w2], J2 = Z2 + g2[Q2], tt2 = Z2 - g2[G2], et2 = Dt(f2 ? Lt(J2, K2) : J2, Z2, f2 ? kt(tt2, X2) : tt2);
              E2[w2] = et2, C2[w2] = et2 - Z2;
            }
          }
          e2.modifiersData[n2] = C2;
        }
      }, requiresIfExists: ["offset"] };
      function re(t2, e2, i2) {
        void 0 === i2 && (i2 = false);
        var n2, s2, o2 = Et(e2), r2 = _t(t2), a2 = ft(e2), l2 = { scrollLeft: 0, scrollTop: 0 }, c2 = { x: 0, y: 0 };
        return (a2 || !a2 && !i2) && (("body" !== ht(e2) || Ft(o2)) && (l2 = (n2 = e2) !== dt(n2) && ft(n2) ? { scrollLeft: (s2 = n2).scrollLeft, scrollTop: s2.scrollTop } : $t(n2)), ft(e2) ? ((c2 = _t(e2)).x += e2.clientLeft, c2.y += e2.clientTop) : o2 && (c2.x = Ut(o2))), { x: r2.left + l2.scrollLeft - c2.x, y: r2.top + l2.scrollTop - c2.y, width: r2.width, height: r2.height };
      }
      var ae = { placement: "bottom", modifiers: [], strategy: "absolute" };
      function le() {
        for (var t2 = arguments.length, e2 = new Array(t2), i2 = 0; i2 < t2; i2++)
          e2[i2] = arguments[i2];
        return !e2.some(function(t3) {
          return !(t3 && "function" == typeof t3.getBoundingClientRect);
        });
      }
      function ce(t2) {
        void 0 === t2 && (t2 = {});
        var e2 = t2, i2 = e2.defaultModifiers, n2 = void 0 === i2 ? [] : i2, s2 = e2.defaultOptions, o2 = void 0 === s2 ? ae : s2;
        return function(t3, e3, i3) {
          void 0 === i3 && (i3 = o2);
          var s3, r2, a2 = { placement: "bottom", orderedModifiers: [], options: Object.assign({}, ae, o2), modifiersData: {}, elements: { reference: t3, popper: e3 }, attributes: {}, styles: {} }, l2 = [], c2 = false, h2 = { state: a2, setOptions: function(i4) {
            d2(), a2.options = Object.assign({}, o2, a2.options, i4), a2.scrollParents = { reference: ut(t3) ? Vt(t3) : t3.contextElement ? Vt(t3.contextElement) : [], popper: Vt(e3) };
            var s4, r3, c3 = function(t4) {
              var e4 = function(t5) {
                var e5 = /* @__PURE__ */ new Map(), i5 = /* @__PURE__ */ new Set(), n3 = [];
                return t5.forEach(function(t6) {
                  e5.set(t6.name, t6);
                }), t5.forEach(function(t6) {
                  i5.has(t6.name) || function t7(s5) {
                    i5.add(s5.name), [].concat(s5.requires || [], s5.requiresIfExists || []).forEach(function(n4) {
                      if (!i5.has(n4)) {
                        var s6 = e5.get(n4);
                        s6 && t7(s6);
                      }
                    }), n3.push(s5);
                  }(t6);
                }), n3;
              }(t4);
              return ct.reduce(function(t5, i5) {
                return t5.concat(e4.filter(function(t6) {
                  return t6.phase === i5;
                }));
              }, []);
            }((s4 = [].concat(n2, a2.options.modifiers), r3 = s4.reduce(function(t4, e4) {
              var i5 = t4[e4.name];
              return t4[e4.name] = i5 ? Object.assign({}, i5, e4, { options: Object.assign({}, i5.options, e4.options), data: Object.assign({}, i5.data, e4.data) }) : e4, t4;
            }, {}), Object.keys(r3).map(function(t4) {
              return r3[t4];
            })));
            return a2.orderedModifiers = c3.filter(function(t4) {
              return t4.enabled;
            }), a2.orderedModifiers.forEach(function(t4) {
              var e4 = t4.name, i5 = t4.options, n3 = void 0 === i5 ? {} : i5, s5 = t4.effect;
              if ("function" == typeof s5) {
                var o3 = s5({ state: a2, name: e4, instance: h2, options: n3 });
                l2.push(o3 || function() {
                });
              }
            }), h2.update();
          }, forceUpdate: function() {
            if (!c2) {
              var t4 = a2.elements, e4 = t4.reference, i4 = t4.popper;
              if (le(e4, i4)) {
                a2.rects = { reference: re(e4, Ot(i4), "fixed" === a2.options.strategy), popper: bt(i4) }, a2.reset = false, a2.placement = a2.options.placement, a2.orderedModifiers.forEach(function(t5) {
                  return a2.modifiersData[t5.name] = Object.assign({}, t5.data);
                });
                for (var n3 = 0; n3 < a2.orderedModifiers.length; n3++)
                  if (true !== a2.reset) {
                    var s4 = a2.orderedModifiers[n3], o3 = s4.fn, r3 = s4.options, l3 = void 0 === r3 ? {} : r3, d3 = s4.name;
                    "function" == typeof o3 && (a2 = o3({ state: a2, options: l3, name: d3, instance: h2 }) || a2);
                  } else
                    a2.reset = false, n3 = -1;
              }
            }
          }, update: (s3 = function() {
            return new Promise(function(t4) {
              h2.forceUpdate(), t4(a2);
            });
          }, function() {
            return r2 || (r2 = new Promise(function(t4) {
              Promise.resolve().then(function() {
                r2 = void 0, t4(s3());
              });
            })), r2;
          }), destroy: function() {
            d2(), c2 = true;
          } };
          if (!le(t3, e3))
            return h2;
          function d2() {
            l2.forEach(function(t4) {
              return t4();
            }), l2 = [];
          }
          return h2.setOptions(i3).then(function(t4) {
            !c2 && i3.onFirstUpdate && i3.onFirstUpdate(t4);
          }), h2;
        };
      }
      var he = ce(), de = ce({ defaultModifiers: [Rt, se, Pt, mt] }), ue = ce({ defaultModifiers: [Rt, se, Pt, mt, ne, Jt, oe, Nt, ie] }), fe = Object.freeze({ __proto__: null, popperGenerator: ce, detectOverflow: Gt, createPopperBase: he, createPopper: ue, createPopperLite: de, top: it, bottom: nt, right: st, left: ot, auto: "auto", basePlacements: rt, start: "start", end: "end", clippingParents: "clippingParents", viewport: "viewport", popper: "popper", reference: "reference", variationPlacements: at, placements: lt, beforeRead: "beforeRead", read: "read", afterRead: "afterRead", beforeMain: "beforeMain", main: "main", afterMain: "afterMain", beforeWrite: "beforeWrite", write: "write", afterWrite: "afterWrite", modifierPhases: ct, applyStyles: mt, arrow: Nt, computeStyles: Pt, eventListeners: Rt, flip: Jt, hide: ie, offset: ne, popperOffsets: se, preventOverflow: oe });
      const pe = new RegExp("ArrowUp|ArrowDown|Escape"), me = g() ? "top-end" : "top-start", ge = g() ? "top-start" : "top-end", _e = g() ? "bottom-end" : "bottom-start", be = g() ? "bottom-start" : "bottom-end", ve = g() ? "left-start" : "right-start", ye = g() ? "right-start" : "left-start", we = { offset: [0, 2], boundary: "clippingParents", reference: "toggle", display: "dynamic", popperConfig: null, autoClose: true }, Ee = { offset: "(array|string|function)", boundary: "(string|element)", reference: "(string|element|object)", display: "string", popperConfig: "(null|object|function)", autoClose: "(boolean|string)" };
      class Ae extends B {
        constructor(t2, e2) {
          super(t2), this._popper = null, this._config = this._getConfig(e2), this._menu = this._getMenuElement(), this._inNavbar = this._detectNavbar(), this._addEventListeners();
        }
        static get Default() {
          return we;
        }
        static get DefaultType() {
          return Ee;
        }
        static get NAME() {
          return "dropdown";
        }
        toggle() {
          h(this._element) || (this._element.classList.contains("show") ? this.hide() : this.show());
        }
        show() {
          if (h(this._element) || this._menu.classList.contains("show"))
            return;
          const t2 = Ae.getParentFromElement(this._element), e2 = { relatedTarget: this._element };
          if (!P.trigger(this._element, "show.bs.dropdown", e2).defaultPrevented) {
            if (this._inNavbar)
              U.setDataAttribute(this._menu, "popper", "none");
            else {
              if (void 0 === fe)
                throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");
              let e3 = this._element;
              "parent" === this._config.reference ? e3 = t2 : r(this._config.reference) ? e3 = a(this._config.reference) : "object" == typeof this._config.reference && (e3 = this._config.reference);
              const i2 = this._getPopperConfig(), n2 = i2.modifiers.find((t3) => "applyStyles" === t3.name && false === t3.enabled);
              this._popper = ue(e3, this._menu, i2), n2 && U.setDataAttribute(this._menu, "popper", "static");
            }
            "ontouchstart" in document.documentElement && !t2.closest(".navbar-nav") && [].concat(...document.body.children).forEach((t3) => P.on(t3, "mouseover", u)), this._element.focus(), this._element.setAttribute("aria-expanded", true), this._menu.classList.toggle("show"), this._element.classList.toggle("show"), P.trigger(this._element, "shown.bs.dropdown", e2);
          }
        }
        hide() {
          if (h(this._element) || !this._menu.classList.contains("show"))
            return;
          const t2 = { relatedTarget: this._element };
          this._completeHide(t2);
        }
        dispose() {
          this._popper && this._popper.destroy(), super.dispose();
        }
        update() {
          this._inNavbar = this._detectNavbar(), this._popper && this._popper.update();
        }
        _addEventListeners() {
          P.on(this._element, "click.bs.dropdown", (t2) => {
            t2.preventDefault(), this.toggle();
          });
        }
        _completeHide(t2) {
          P.trigger(this._element, "hide.bs.dropdown", t2).defaultPrevented || ("ontouchstart" in document.documentElement && [].concat(...document.body.children).forEach((t3) => P.off(t3, "mouseover", u)), this._popper && this._popper.destroy(), this._menu.classList.remove("show"), this._element.classList.remove("show"), this._element.setAttribute("aria-expanded", "false"), U.removeDataAttribute(this._menu, "popper"), P.trigger(this._element, "hidden.bs.dropdown", t2));
        }
        _getConfig(t2) {
          if (t2 = { ...this.constructor.Default, ...U.getDataAttributes(this._element), ...t2 }, l("dropdown", t2, this.constructor.DefaultType), "object" == typeof t2.reference && !r(t2.reference) && "function" != typeof t2.reference.getBoundingClientRect)
            throw new TypeError("dropdown".toUpperCase() + ': Option "reference" provided type "object" without a required "getBoundingClientRect" method.');
          return t2;
        }
        _getMenuElement() {
          return t.next(this._element, ".dropdown-menu")[0];
        }
        _getPlacement() {
          const t2 = this._element.parentNode;
          if (t2.classList.contains("dropend"))
            return ve;
          if (t2.classList.contains("dropstart"))
            return ye;
          const e2 = "end" === getComputedStyle(this._menu).getPropertyValue("--bs-position").trim();
          return t2.classList.contains("dropup") ? e2 ? ge : me : e2 ? be : _e;
        }
        _detectNavbar() {
          return null !== this._element.closest(".navbar");
        }
        _getOffset() {
          const { offset: t2 } = this._config;
          return "string" == typeof t2 ? t2.split(",").map((t3) => Number.parseInt(t3, 10)) : "function" == typeof t2 ? (e2) => t2(e2, this._element) : t2;
        }
        _getPopperConfig() {
          const t2 = { placement: this._getPlacement(), modifiers: [{ name: "preventOverflow", options: { boundary: this._config.boundary } }, { name: "offset", options: { offset: this._getOffset() } }] };
          return "static" === this._config.display && (t2.modifiers = [{ name: "applyStyles", enabled: false }]), { ...t2, ..."function" == typeof this._config.popperConfig ? this._config.popperConfig(t2) : this._config.popperConfig };
        }
        _selectMenuItem({ key: e2, target: i2 }) {
          const n2 = t.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)", this._menu).filter(c);
          n2.length && y(n2, i2, "ArrowDown" === e2, !n2.includes(i2)).focus();
        }
        static dropdownInterface(t2, e2) {
          const i2 = Ae.getOrCreateInstance(t2, e2);
          if ("string" == typeof e2) {
            if (void 0 === i2[e2])
              throw new TypeError(`No method named "${e2}"`);
            i2[e2]();
          }
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            Ae.dropdownInterface(this, t2);
          });
        }
        static clearMenus(e2) {
          if (e2 && (2 === e2.button || "keyup" === e2.type && "Tab" !== e2.key))
            return;
          const i2 = t.find('[data-bs-toggle="dropdown"]');
          for (let t2 = 0, n2 = i2.length; t2 < n2; t2++) {
            const n3 = Ae.getInstance(i2[t2]);
            if (!n3 || false === n3._config.autoClose)
              continue;
            if (!n3._element.classList.contains("show"))
              continue;
            const s2 = { relatedTarget: n3._element };
            if (e2) {
              const t3 = e2.composedPath(), i3 = t3.includes(n3._menu);
              if (t3.includes(n3._element) || "inside" === n3._config.autoClose && !i3 || "outside" === n3._config.autoClose && i3)
                continue;
              if (n3._menu.contains(e2.target) && ("keyup" === e2.type && "Tab" === e2.key || /input|select|option|textarea|form/i.test(e2.target.tagName)))
                continue;
              "click" === e2.type && (s2.clickEvent = e2);
            }
            n3._completeHide(s2);
          }
        }
        static getParentFromElement(t2) {
          return s(t2) || t2.parentNode;
        }
        static dataApiKeydownHandler(e2) {
          if (/input|textarea/i.test(e2.target.tagName) ? "Space" === e2.key || "Escape" !== e2.key && ("ArrowDown" !== e2.key && "ArrowUp" !== e2.key || e2.target.closest(".dropdown-menu")) : !pe.test(e2.key))
            return;
          const i2 = this.classList.contains("show");
          if (!i2 && "Escape" === e2.key)
            return;
          if (e2.preventDefault(), e2.stopPropagation(), h(this))
            return;
          const n2 = () => this.matches('[data-bs-toggle="dropdown"]') ? this : t.prev(this, '[data-bs-toggle="dropdown"]')[0];
          return "Escape" === e2.key ? (n2().focus(), void Ae.clearMenus()) : "ArrowUp" === e2.key || "ArrowDown" === e2.key ? (i2 || n2().click(), void Ae.getInstance(n2())._selectMenuItem(e2)) : void (i2 && "Space" !== e2.key || Ae.clearMenus());
        }
      }
      P.on(document, "keydown.bs.dropdown.data-api", '[data-bs-toggle="dropdown"]', Ae.dataApiKeydownHandler), P.on(document, "keydown.bs.dropdown.data-api", ".dropdown-menu", Ae.dataApiKeydownHandler), P.on(document, "click.bs.dropdown.data-api", Ae.clearMenus), P.on(document, "keyup.bs.dropdown.data-api", Ae.clearMenus), P.on(document, "click.bs.dropdown.data-api", '[data-bs-toggle="dropdown"]', function(t2) {
        t2.preventDefault(), Ae.dropdownInterface(this);
      }), _(Ae);
      class Te {
        constructor() {
          this._element = document.body;
        }
        getWidth() {
          const t2 = document.documentElement.clientWidth;
          return Math.abs(window.innerWidth - t2);
        }
        hide() {
          const t2 = this.getWidth();
          this._disableOverFlow(), this._setElementAttributes(this._element, "paddingRight", (e2) => e2 + t2), this._setElementAttributes(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top", "paddingRight", (e2) => e2 + t2), this._setElementAttributes(".sticky-top", "marginRight", (e2) => e2 - t2);
        }
        _disableOverFlow() {
          this._saveInitialAttribute(this._element, "overflow"), this._element.style.overflow = "hidden";
        }
        _setElementAttributes(t2, e2, i2) {
          const n2 = this.getWidth();
          this._applyManipulationCallback(t2, (t3) => {
            if (t3 !== this._element && window.innerWidth > t3.clientWidth + n2)
              return;
            this._saveInitialAttribute(t3, e2);
            const s2 = window.getComputedStyle(t3)[e2];
            t3.style[e2] = i2(Number.parseFloat(s2)) + "px";
          });
        }
        reset() {
          this._resetElementAttributes(this._element, "overflow"), this._resetElementAttributes(this._element, "paddingRight"), this._resetElementAttributes(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top", "paddingRight"), this._resetElementAttributes(".sticky-top", "marginRight");
        }
        _saveInitialAttribute(t2, e2) {
          const i2 = t2.style[e2];
          i2 && U.setDataAttribute(t2, e2, i2);
        }
        _resetElementAttributes(t2, e2) {
          this._applyManipulationCallback(t2, (t3) => {
            const i2 = U.getDataAttribute(t3, e2);
            void 0 === i2 ? t3.style.removeProperty(e2) : (U.removeDataAttribute(t3, e2), t3.style[e2] = i2);
          });
        }
        _applyManipulationCallback(e2, i2) {
          r(e2) ? i2(e2) : t.find(e2, this._element).forEach(i2);
        }
        isOverflowing() {
          return this.getWidth() > 0;
        }
      }
      const Oe = { isVisible: true, isAnimated: false, rootElement: "body", clickCallback: null }, Ce = { isVisible: "boolean", isAnimated: "boolean", rootElement: "(element|string)", clickCallback: "(function|null)" };
      class ke {
        constructor(t2) {
          this._config = this._getConfig(t2), this._isAppended = false, this._element = null;
        }
        show(t2) {
          this._config.isVisible ? (this._append(), this._config.isAnimated && f(this._getElement()), this._getElement().classList.add("show"), this._emulateAnimation(() => {
            b(t2);
          })) : b(t2);
        }
        hide(t2) {
          this._config.isVisible ? (this._getElement().classList.remove("show"), this._emulateAnimation(() => {
            this.dispose(), b(t2);
          })) : b(t2);
        }
        _getElement() {
          if (!this._element) {
            const t2 = document.createElement("div");
            t2.className = "modal-backdrop", this._config.isAnimated && t2.classList.add("fade"), this._element = t2;
          }
          return this._element;
        }
        _getConfig(t2) {
          return (t2 = { ...Oe, ..."object" == typeof t2 ? t2 : {} }).rootElement = a(t2.rootElement), l("backdrop", t2, Ce), t2;
        }
        _append() {
          this._isAppended || (this._config.rootElement.appendChild(this._getElement()), P.on(this._getElement(), "mousedown.bs.backdrop", () => {
            b(this._config.clickCallback);
          }), this._isAppended = true);
        }
        dispose() {
          this._isAppended && (P.off(this._element, "mousedown.bs.backdrop"), this._element.remove(), this._isAppended = false);
        }
        _emulateAnimation(t2) {
          v(t2, this._getElement(), this._config.isAnimated);
        }
      }
      const Le = { backdrop: true, keyboard: true, focus: true }, xe = { backdrop: "(boolean|string)", keyboard: "boolean", focus: "boolean" };
      class De extends B {
        constructor(e2, i2) {
          super(e2), this._config = this._getConfig(i2), this._dialog = t.findOne(".modal-dialog", this._element), this._backdrop = this._initializeBackDrop(), this._isShown = false, this._ignoreBackdropClick = false, this._isTransitioning = false, this._scrollBar = new Te();
        }
        static get Default() {
          return Le;
        }
        static get NAME() {
          return "modal";
        }
        toggle(t2) {
          return this._isShown ? this.hide() : this.show(t2);
        }
        show(t2) {
          this._isShown || this._isTransitioning || P.trigger(this._element, "show.bs.modal", { relatedTarget: t2 }).defaultPrevented || (this._isShown = true, this._isAnimated() && (this._isTransitioning = true), this._scrollBar.hide(), document.body.classList.add("modal-open"), this._adjustDialog(), this._setEscapeEvent(), this._setResizeEvent(), P.on(this._element, "click.dismiss.bs.modal", '[data-bs-dismiss="modal"]', (t3) => this.hide(t3)), P.on(this._dialog, "mousedown.dismiss.bs.modal", () => {
            P.one(this._element, "mouseup.dismiss.bs.modal", (t3) => {
              t3.target === this._element && (this._ignoreBackdropClick = true);
            });
          }), this._showBackdrop(() => this._showElement(t2)));
        }
        hide(t2) {
          if (t2 && ["A", "AREA"].includes(t2.target.tagName) && t2.preventDefault(), !this._isShown || this._isTransitioning)
            return;
          if (P.trigger(this._element, "hide.bs.modal").defaultPrevented)
            return;
          this._isShown = false;
          const e2 = this._isAnimated();
          e2 && (this._isTransitioning = true), this._setEscapeEvent(), this._setResizeEvent(), P.off(document, "focusin.bs.modal"), this._element.classList.remove("show"), P.off(this._element, "click.dismiss.bs.modal"), P.off(this._dialog, "mousedown.dismiss.bs.modal"), this._queueCallback(() => this._hideModal(), this._element, e2);
        }
        dispose() {
          [window, this._dialog].forEach((t2) => P.off(t2, ".bs.modal")), this._backdrop.dispose(), super.dispose(), P.off(document, "focusin.bs.modal");
        }
        handleUpdate() {
          this._adjustDialog();
        }
        _initializeBackDrop() {
          return new ke({ isVisible: Boolean(this._config.backdrop), isAnimated: this._isAnimated() });
        }
        _getConfig(t2) {
          return t2 = { ...Le, ...U.getDataAttributes(this._element), ..."object" == typeof t2 ? t2 : {} }, l("modal", t2, xe), t2;
        }
        _showElement(e2) {
          const i2 = this._isAnimated(), n2 = t.findOne(".modal-body", this._dialog);
          this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", true), this._element.setAttribute("role", "dialog"), this._element.scrollTop = 0, n2 && (n2.scrollTop = 0), i2 && f(this._element), this._element.classList.add("show"), this._config.focus && this._enforceFocus(), this._queueCallback(() => {
            this._config.focus && this._element.focus(), this._isTransitioning = false, P.trigger(this._element, "shown.bs.modal", { relatedTarget: e2 });
          }, this._dialog, i2);
        }
        _enforceFocus() {
          P.off(document, "focusin.bs.modal"), P.on(document, "focusin.bs.modal", (t2) => {
            document === t2.target || this._element === t2.target || this._element.contains(t2.target) || this._element.focus();
          });
        }
        _setEscapeEvent() {
          this._isShown ? P.on(this._element, "keydown.dismiss.bs.modal", (t2) => {
            this._config.keyboard && "Escape" === t2.key ? (t2.preventDefault(), this.hide()) : this._config.keyboard || "Escape" !== t2.key || this._triggerBackdropTransition();
          }) : P.off(this._element, "keydown.dismiss.bs.modal");
        }
        _setResizeEvent() {
          this._isShown ? P.on(window, "resize.bs.modal", () => this._adjustDialog()) : P.off(window, "resize.bs.modal");
        }
        _hideModal() {
          this._element.style.display = "none", this._element.setAttribute("aria-hidden", true), this._element.removeAttribute("aria-modal"), this._element.removeAttribute("role"), this._isTransitioning = false, this._backdrop.hide(() => {
            document.body.classList.remove("modal-open"), this._resetAdjustments(), this._scrollBar.reset(), P.trigger(this._element, "hidden.bs.modal");
          });
        }
        _showBackdrop(t2) {
          P.on(this._element, "click.dismiss.bs.modal", (t3) => {
            this._ignoreBackdropClick ? this._ignoreBackdropClick = false : t3.target === t3.currentTarget && (true === this._config.backdrop ? this.hide() : "static" === this._config.backdrop && this._triggerBackdropTransition());
          }), this._backdrop.show(t2);
        }
        _isAnimated() {
          return this._element.classList.contains("fade");
        }
        _triggerBackdropTransition() {
          if (P.trigger(this._element, "hidePrevented.bs.modal").defaultPrevented)
            return;
          const { classList: t2, scrollHeight: e2, style: i2 } = this._element, n2 = e2 > document.documentElement.clientHeight;
          !n2 && "hidden" === i2.overflowY || t2.contains("modal-static") || (n2 || (i2.overflowY = "hidden"), t2.add("modal-static"), this._queueCallback(() => {
            t2.remove("modal-static"), n2 || this._queueCallback(() => {
              i2.overflowY = "";
            }, this._dialog);
          }, this._dialog), this._element.focus());
        }
        _adjustDialog() {
          const t2 = this._element.scrollHeight > document.documentElement.clientHeight, e2 = this._scrollBar.getWidth(), i2 = e2 > 0;
          (!i2 && t2 && !g() || i2 && !t2 && g()) && (this._element.style.paddingLeft = e2 + "px"), (i2 && !t2 && !g() || !i2 && t2 && g()) && (this._element.style.paddingRight = e2 + "px");
        }
        _resetAdjustments() {
          this._element.style.paddingLeft = "", this._element.style.paddingRight = "";
        }
        static jQueryInterface(t2, e2) {
          return this.each(function() {
            const i2 = De.getOrCreateInstance(this, t2);
            if ("string" == typeof t2) {
              if (void 0 === i2[t2])
                throw new TypeError(`No method named "${t2}"`);
              i2[t2](e2);
            }
          });
        }
      }
      P.on(document, "click.bs.modal.data-api", '[data-bs-toggle="modal"]', function(t2) {
        const e2 = s(this);
        ["A", "AREA"].includes(this.tagName) && t2.preventDefault(), P.one(e2, "show.bs.modal", (t3) => {
          t3.defaultPrevented || P.one(e2, "hidden.bs.modal", () => {
            c(this) && this.focus();
          });
        }), De.getOrCreateInstance(e2).toggle(this);
      }), _(De);
      const Se = { backdrop: true, keyboard: true, scroll: false }, Ie = { backdrop: "boolean", keyboard: "boolean", scroll: "boolean" };
      class Ne extends B {
        constructor(t2, e2) {
          super(t2), this._config = this._getConfig(e2), this._isShown = false, this._backdrop = this._initializeBackDrop(), this._addEventListeners();
        }
        static get NAME() {
          return "offcanvas";
        }
        static get Default() {
          return Se;
        }
        toggle(t2) {
          return this._isShown ? this.hide() : this.show(t2);
        }
        show(t2) {
          this._isShown || P.trigger(this._element, "show.bs.offcanvas", { relatedTarget: t2 }).defaultPrevented || (this._isShown = true, this._element.style.visibility = "visible", this._backdrop.show(), this._config.scroll || (new Te().hide(), this._enforceFocusOnElement(this._element)), this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", true), this._element.setAttribute("role", "dialog"), this._element.classList.add("show"), this._queueCallback(() => {
            P.trigger(this._element, "shown.bs.offcanvas", { relatedTarget: t2 });
          }, this._element, true));
        }
        hide() {
          this._isShown && (P.trigger(this._element, "hide.bs.offcanvas").defaultPrevented || (P.off(document, "focusin.bs.offcanvas"), this._element.blur(), this._isShown = false, this._element.classList.remove("show"), this._backdrop.hide(), this._queueCallback(() => {
            this._element.setAttribute("aria-hidden", true), this._element.removeAttribute("aria-modal"), this._element.removeAttribute("role"), this._element.style.visibility = "hidden", this._config.scroll || new Te().reset(), P.trigger(this._element, "hidden.bs.offcanvas");
          }, this._element, true)));
        }
        dispose() {
          this._backdrop.dispose(), super.dispose(), P.off(document, "focusin.bs.offcanvas");
        }
        _getConfig(t2) {
          return t2 = { ...Se, ...U.getDataAttributes(this._element), ..."object" == typeof t2 ? t2 : {} }, l("offcanvas", t2, Ie), t2;
        }
        _initializeBackDrop() {
          return new ke({ isVisible: this._config.backdrop, isAnimated: true, rootElement: this._element.parentNode, clickCallback: () => this.hide() });
        }
        _enforceFocusOnElement(t2) {
          P.off(document, "focusin.bs.offcanvas"), P.on(document, "focusin.bs.offcanvas", (e2) => {
            document === e2.target || t2 === e2.target || t2.contains(e2.target) || t2.focus();
          }), t2.focus();
        }
        _addEventListeners() {
          P.on(this._element, "click.dismiss.bs.offcanvas", '[data-bs-dismiss="offcanvas"]', () => this.hide()), P.on(this._element, "keydown.dismiss.bs.offcanvas", (t2) => {
            this._config.keyboard && "Escape" === t2.key && this.hide();
          });
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            const e2 = Ne.getOrCreateInstance(this, t2);
            if ("string" == typeof t2) {
              if (void 0 === e2[t2] || t2.startsWith("_") || "constructor" === t2)
                throw new TypeError(`No method named "${t2}"`);
              e2[t2](this);
            }
          });
        }
      }
      P.on(document, "click.bs.offcanvas.data-api", '[data-bs-toggle="offcanvas"]', function(e2) {
        const i2 = s(this);
        if (["A", "AREA"].includes(this.tagName) && e2.preventDefault(), h(this))
          return;
        P.one(i2, "hidden.bs.offcanvas", () => {
          c(this) && this.focus();
        });
        const n2 = t.findOne(".offcanvas.show");
        n2 && n2 !== i2 && Ne.getInstance(n2).hide(), Ne.getOrCreateInstance(i2).toggle(this);
      }), P.on(window, "load.bs.offcanvas.data-api", () => t.find(".offcanvas.show").forEach((t2) => Ne.getOrCreateInstance(t2).show())), _(Ne);
      const je = /* @__PURE__ */ new Set(["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"]), Me = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/i, Pe = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i, He = (t2, e2) => {
        const i2 = t2.nodeName.toLowerCase();
        if (e2.includes(i2))
          return !je.has(i2) || Boolean(Me.test(t2.nodeValue) || Pe.test(t2.nodeValue));
        const n2 = e2.filter((t3) => t3 instanceof RegExp);
        for (let t3 = 0, e3 = n2.length; t3 < e3; t3++)
          if (n2[t3].test(i2))
            return true;
        return false;
      };
      function Re(t2, e2, i2) {
        if (!t2.length)
          return t2;
        if (i2 && "function" == typeof i2)
          return i2(t2);
        const n2 = new window.DOMParser().parseFromString(t2, "text/html"), s2 = Object.keys(e2), o2 = [].concat(...n2.body.querySelectorAll("*"));
        for (let t3 = 0, i3 = o2.length; t3 < i3; t3++) {
          const i4 = o2[t3], n3 = i4.nodeName.toLowerCase();
          if (!s2.includes(n3)) {
            i4.remove();
            continue;
          }
          const r2 = [].concat(...i4.attributes), a2 = [].concat(e2["*"] || [], e2[n3] || []);
          r2.forEach((t4) => {
            He(t4, a2) || i4.removeAttribute(t4.nodeName);
          });
        }
        return n2.body.innerHTML;
      }
      const Be = new RegExp("(^|\\s)bs-tooltip\\S+", "g"), We = /* @__PURE__ */ new Set(["sanitize", "allowList", "sanitizeFn"]), qe = { animation: "boolean", template: "string", title: "(string|element|function)", trigger: "string", delay: "(number|object)", html: "boolean", selector: "(string|boolean)", placement: "(string|function)", offset: "(array|string|function)", container: "(string|element|boolean)", fallbackPlacements: "array", boundary: "(string|element)", customClass: "(string|function)", sanitize: "boolean", sanitizeFn: "(null|function)", allowList: "object", popperConfig: "(null|object|function)" }, ze = { AUTO: "auto", TOP: "top", RIGHT: g() ? "left" : "right", BOTTOM: "bottom", LEFT: g() ? "right" : "left" }, $e = { animation: true, template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: false, selector: false, placement: "top", offset: [0, 0], container: false, fallbackPlacements: ["top", "right", "bottom", "left"], boundary: "clippingParents", customClass: "", sanitize: true, sanitizeFn: null, allowList: { "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i], a: ["target", "href", "title", "rel"], area: [], b: [], br: [], col: [], code: [], div: [], em: [], hr: [], h1: [], h2: [], h3: [], h4: [], h5: [], h6: [], i: [], img: ["src", "srcset", "alt", "title", "width", "height"], li: [], ol: [], p: [], pre: [], s: [], small: [], span: [], sub: [], sup: [], strong: [], u: [], ul: [] }, popperConfig: null }, Ue = { HIDE: "hide.bs.tooltip", HIDDEN: "hidden.bs.tooltip", SHOW: "show.bs.tooltip", SHOWN: "shown.bs.tooltip", INSERTED: "inserted.bs.tooltip", CLICK: "click.bs.tooltip", FOCUSIN: "focusin.bs.tooltip", FOCUSOUT: "focusout.bs.tooltip", MOUSEENTER: "mouseenter.bs.tooltip", MOUSELEAVE: "mouseleave.bs.tooltip" };
      class Fe extends B {
        constructor(t2, e2) {
          if (void 0 === fe)
            throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");
          super(t2), this._isEnabled = true, this._timeout = 0, this._hoverState = "", this._activeTrigger = {}, this._popper = null, this._config = this._getConfig(e2), this.tip = null, this._setListeners();
        }
        static get Default() {
          return $e;
        }
        static get NAME() {
          return "tooltip";
        }
        static get Event() {
          return Ue;
        }
        static get DefaultType() {
          return qe;
        }
        enable() {
          this._isEnabled = true;
        }
        disable() {
          this._isEnabled = false;
        }
        toggleEnabled() {
          this._isEnabled = !this._isEnabled;
        }
        toggle(t2) {
          if (this._isEnabled)
            if (t2) {
              const e2 = this._initializeOnDelegatedTarget(t2);
              e2._activeTrigger.click = !e2._activeTrigger.click, e2._isWithActiveTrigger() ? e2._enter(null, e2) : e2._leave(null, e2);
            } else {
              if (this.getTipElement().classList.contains("show"))
                return void this._leave(null, this);
              this._enter(null, this);
            }
        }
        dispose() {
          clearTimeout(this._timeout), P.off(this._element.closest(".modal"), "hide.bs.modal", this._hideModalHandler), this.tip && this.tip.remove(), this._popper && this._popper.destroy(), super.dispose();
        }
        show() {
          if ("none" === this._element.style.display)
            throw new Error("Please use show on visible elements");
          if (!this.isWithContent() || !this._isEnabled)
            return;
          const t2 = P.trigger(this._element, this.constructor.Event.SHOW), i2 = d(this._element), n2 = null === i2 ? this._element.ownerDocument.documentElement.contains(this._element) : i2.contains(this._element);
          if (t2.defaultPrevented || !n2)
            return;
          const s2 = this.getTipElement(), o2 = e(this.constructor.NAME);
          s2.setAttribute("id", o2), this._element.setAttribute("aria-describedby", o2), this.setContent(), this._config.animation && s2.classList.add("fade");
          const r2 = "function" == typeof this._config.placement ? this._config.placement.call(this, s2, this._element) : this._config.placement, a2 = this._getAttachment(r2);
          this._addAttachmentClass(a2);
          const { container: l2 } = this._config;
          R.set(s2, this.constructor.DATA_KEY, this), this._element.ownerDocument.documentElement.contains(this.tip) || (l2.appendChild(s2), P.trigger(this._element, this.constructor.Event.INSERTED)), this._popper ? this._popper.update() : this._popper = ue(this._element, s2, this._getPopperConfig(a2)), s2.classList.add("show");
          const c2 = "function" == typeof this._config.customClass ? this._config.customClass() : this._config.customClass;
          c2 && s2.classList.add(...c2.split(" ")), "ontouchstart" in document.documentElement && [].concat(...document.body.children).forEach((t3) => {
            P.on(t3, "mouseover", u);
          });
          const h2 = this.tip.classList.contains("fade");
          this._queueCallback(() => {
            const t3 = this._hoverState;
            this._hoverState = null, P.trigger(this._element, this.constructor.Event.SHOWN), "out" === t3 && this._leave(null, this);
          }, this.tip, h2);
        }
        hide() {
          if (!this._popper)
            return;
          const t2 = this.getTipElement();
          if (P.trigger(this._element, this.constructor.Event.HIDE).defaultPrevented)
            return;
          t2.classList.remove("show"), "ontouchstart" in document.documentElement && [].concat(...document.body.children).forEach((t3) => P.off(t3, "mouseover", u)), this._activeTrigger.click = false, this._activeTrigger.focus = false, this._activeTrigger.hover = false;
          const e2 = this.tip.classList.contains("fade");
          this._queueCallback(() => {
            this._isWithActiveTrigger() || ("show" !== this._hoverState && t2.remove(), this._cleanTipClass(), this._element.removeAttribute("aria-describedby"), P.trigger(this._element, this.constructor.Event.HIDDEN), this._popper && (this._popper.destroy(), this._popper = null));
          }, this.tip, e2), this._hoverState = "";
        }
        update() {
          null !== this._popper && this._popper.update();
        }
        isWithContent() {
          return Boolean(this.getTitle());
        }
        getTipElement() {
          if (this.tip)
            return this.tip;
          const t2 = document.createElement("div");
          return t2.innerHTML = this._config.template, this.tip = t2.children[0], this.tip;
        }
        setContent() {
          const e2 = this.getTipElement();
          this.setElementContent(t.findOne(".tooltip-inner", e2), this.getTitle()), e2.classList.remove("fade", "show");
        }
        setElementContent(t2, e2) {
          if (null !== t2)
            return r(e2) ? (e2 = a(e2), void (this._config.html ? e2.parentNode !== t2 && (t2.innerHTML = "", t2.appendChild(e2)) : t2.textContent = e2.textContent)) : void (this._config.html ? (this._config.sanitize && (e2 = Re(e2, this._config.allowList, this._config.sanitizeFn)), t2.innerHTML = e2) : t2.textContent = e2);
        }
        getTitle() {
          let t2 = this._element.getAttribute("data-bs-original-title");
          return t2 || (t2 = "function" == typeof this._config.title ? this._config.title.call(this._element) : this._config.title), t2;
        }
        updateAttachment(t2) {
          return "right" === t2 ? "end" : "left" === t2 ? "start" : t2;
        }
        _initializeOnDelegatedTarget(t2, e2) {
          const i2 = this.constructor.DATA_KEY;
          return (e2 = e2 || R.get(t2.delegateTarget, i2)) || (e2 = new this.constructor(t2.delegateTarget, this._getDelegateConfig()), R.set(t2.delegateTarget, i2, e2)), e2;
        }
        _getOffset() {
          const { offset: t2 } = this._config;
          return "string" == typeof t2 ? t2.split(",").map((t3) => Number.parseInt(t3, 10)) : "function" == typeof t2 ? (e2) => t2(e2, this._element) : t2;
        }
        _getPopperConfig(t2) {
          const e2 = { placement: t2, modifiers: [{ name: "flip", options: { fallbackPlacements: this._config.fallbackPlacements } }, { name: "offset", options: { offset: this._getOffset() } }, { name: "preventOverflow", options: { boundary: this._config.boundary } }, { name: "arrow", options: { element: `.${this.constructor.NAME}-arrow` } }, { name: "onChange", enabled: true, phase: "afterWrite", fn: (t3) => this._handlePopperPlacementChange(t3) }], onFirstUpdate: (t3) => {
            t3.options.placement !== t3.placement && this._handlePopperPlacementChange(t3);
          } };
          return { ...e2, ..."function" == typeof this._config.popperConfig ? this._config.popperConfig(e2) : this._config.popperConfig };
        }
        _addAttachmentClass(t2) {
          this.getTipElement().classList.add("bs-tooltip-" + this.updateAttachment(t2));
        }
        _getAttachment(t2) {
          return ze[t2.toUpperCase()];
        }
        _setListeners() {
          this._config.trigger.split(" ").forEach((t2) => {
            if ("click" === t2)
              P.on(this._element, this.constructor.Event.CLICK, this._config.selector, (t3) => this.toggle(t3));
            else if ("manual" !== t2) {
              const e2 = "hover" === t2 ? this.constructor.Event.MOUSEENTER : this.constructor.Event.FOCUSIN, i2 = "hover" === t2 ? this.constructor.Event.MOUSELEAVE : this.constructor.Event.FOCUSOUT;
              P.on(this._element, e2, this._config.selector, (t3) => this._enter(t3)), P.on(this._element, i2, this._config.selector, (t3) => this._leave(t3));
            }
          }), this._hideModalHandler = () => {
            this._element && this.hide();
          }, P.on(this._element.closest(".modal"), "hide.bs.modal", this._hideModalHandler), this._config.selector ? this._config = { ...this._config, trigger: "manual", selector: "" } : this._fixTitle();
        }
        _fixTitle() {
          const t2 = this._element.getAttribute("title"), e2 = typeof this._element.getAttribute("data-bs-original-title");
          (t2 || "string" !== e2) && (this._element.setAttribute("data-bs-original-title", t2 || ""), !t2 || this._element.getAttribute("aria-label") || this._element.textContent || this._element.setAttribute("aria-label", t2), this._element.setAttribute("title", ""));
        }
        _enter(t2, e2) {
          e2 = this._initializeOnDelegatedTarget(t2, e2), t2 && (e2._activeTrigger["focusin" === t2.type ? "focus" : "hover"] = true), e2.getTipElement().classList.contains("show") || "show" === e2._hoverState ? e2._hoverState = "show" : (clearTimeout(e2._timeout), e2._hoverState = "show", e2._config.delay && e2._config.delay.show ? e2._timeout = setTimeout(() => {
            "show" === e2._hoverState && e2.show();
          }, e2._config.delay.show) : e2.show());
        }
        _leave(t2, e2) {
          e2 = this._initializeOnDelegatedTarget(t2, e2), t2 && (e2._activeTrigger["focusout" === t2.type ? "focus" : "hover"] = e2._element.contains(t2.relatedTarget)), e2._isWithActiveTrigger() || (clearTimeout(e2._timeout), e2._hoverState = "out", e2._config.delay && e2._config.delay.hide ? e2._timeout = setTimeout(() => {
            "out" === e2._hoverState && e2.hide();
          }, e2._config.delay.hide) : e2.hide());
        }
        _isWithActiveTrigger() {
          for (const t2 in this._activeTrigger)
            if (this._activeTrigger[t2])
              return true;
          return false;
        }
        _getConfig(t2) {
          const e2 = U.getDataAttributes(this._element);
          return Object.keys(e2).forEach((t3) => {
            We.has(t3) && delete e2[t3];
          }), (t2 = { ...this.constructor.Default, ...e2, ..."object" == typeof t2 && t2 ? t2 : {} }).container = false === t2.container ? document.body : a(t2.container), "number" == typeof t2.delay && (t2.delay = { show: t2.delay, hide: t2.delay }), "number" == typeof t2.title && (t2.title = t2.title.toString()), "number" == typeof t2.content && (t2.content = t2.content.toString()), l("tooltip", t2, this.constructor.DefaultType), t2.sanitize && (t2.template = Re(t2.template, t2.allowList, t2.sanitizeFn)), t2;
        }
        _getDelegateConfig() {
          const t2 = {};
          if (this._config)
            for (const e2 in this._config)
              this.constructor.Default[e2] !== this._config[e2] && (t2[e2] = this._config[e2]);
          return t2;
        }
        _cleanTipClass() {
          const t2 = this.getTipElement(), e2 = t2.getAttribute("class").match(Be);
          null !== e2 && e2.length > 0 && e2.map((t3) => t3.trim()).forEach((e3) => t2.classList.remove(e3));
        }
        _handlePopperPlacementChange(t2) {
          const { state: e2 } = t2;
          e2 && (this.tip = e2.elements.popper, this._cleanTipClass(), this._addAttachmentClass(this._getAttachment(e2.placement)));
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            const e2 = Fe.getOrCreateInstance(this, t2);
            if ("string" == typeof t2) {
              if (void 0 === e2[t2])
                throw new TypeError(`No method named "${t2}"`);
              e2[t2]();
            }
          });
        }
      }
      _(Fe);
      const Ve = new RegExp("(^|\\s)bs-popover\\S+", "g"), Ke = { ...Fe.Default, placement: "right", offset: [0, 8], trigger: "click", content: "", template: '<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>' }, Xe = { ...Fe.DefaultType, content: "(string|element|function)" }, Ye = { HIDE: "hide.bs.popover", HIDDEN: "hidden.bs.popover", SHOW: "show.bs.popover", SHOWN: "shown.bs.popover", INSERTED: "inserted.bs.popover", CLICK: "click.bs.popover", FOCUSIN: "focusin.bs.popover", FOCUSOUT: "focusout.bs.popover", MOUSEENTER: "mouseenter.bs.popover", MOUSELEAVE: "mouseleave.bs.popover" };
      class Qe extends Fe {
        static get Default() {
          return Ke;
        }
        static get NAME() {
          return "popover";
        }
        static get Event() {
          return Ye;
        }
        static get DefaultType() {
          return Xe;
        }
        isWithContent() {
          return this.getTitle() || this._getContent();
        }
        getTipElement() {
          return this.tip || (this.tip = super.getTipElement(), this.getTitle() || t.findOne(".popover-header", this.tip).remove(), this._getContent() || t.findOne(".popover-body", this.tip).remove()), this.tip;
        }
        setContent() {
          const e2 = this.getTipElement();
          this.setElementContent(t.findOne(".popover-header", e2), this.getTitle());
          let i2 = this._getContent();
          "function" == typeof i2 && (i2 = i2.call(this._element)), this.setElementContent(t.findOne(".popover-body", e2), i2), e2.classList.remove("fade", "show");
        }
        _addAttachmentClass(t2) {
          this.getTipElement().classList.add("bs-popover-" + this.updateAttachment(t2));
        }
        _getContent() {
          return this._element.getAttribute("data-bs-content") || this._config.content;
        }
        _cleanTipClass() {
          const t2 = this.getTipElement(), e2 = t2.getAttribute("class").match(Ve);
          null !== e2 && e2.length > 0 && e2.map((t3) => t3.trim()).forEach((e3) => t2.classList.remove(e3));
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            const e2 = Qe.getOrCreateInstance(this, t2);
            if ("string" == typeof t2) {
              if (void 0 === e2[t2])
                throw new TypeError(`No method named "${t2}"`);
              e2[t2]();
            }
          });
        }
      }
      _(Qe);
      const Ge = { offset: 10, method: "auto", target: "" }, Ze = { offset: "number", method: "string", target: "(string|element)" };
      class Je extends B {
        constructor(t2, e2) {
          super(t2), this._scrollElement = "BODY" === this._element.tagName ? window : this._element, this._config = this._getConfig(e2), this._selector = `${this._config.target} .nav-link, ${this._config.target} .list-group-item, ${this._config.target} .dropdown-item`, this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, P.on(this._scrollElement, "scroll.bs.scrollspy", () => this._process()), this.refresh(), this._process();
        }
        static get Default() {
          return Ge;
        }
        static get NAME() {
          return "scrollspy";
        }
        refresh() {
          const e2 = this._scrollElement === this._scrollElement.window ? "offset" : "position", i2 = "auto" === this._config.method ? e2 : this._config.method, s2 = "position" === i2 ? this._getScrollTop() : 0;
          this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight(), t.find(this._selector).map((e3) => {
            const o2 = n(e3), r2 = o2 ? t.findOne(o2) : null;
            if (r2) {
              const t2 = r2.getBoundingClientRect();
              if (t2.width || t2.height)
                return [U[i2](r2).top + s2, o2];
            }
            return null;
          }).filter((t2) => t2).sort((t2, e3) => t2[0] - e3[0]).forEach((t2) => {
            this._offsets.push(t2[0]), this._targets.push(t2[1]);
          });
        }
        dispose() {
          P.off(this._scrollElement, ".bs.scrollspy"), super.dispose();
        }
        _getConfig(t2) {
          if ("string" != typeof (t2 = { ...Ge, ...U.getDataAttributes(this._element), ..."object" == typeof t2 && t2 ? t2 : {} }).target && r(t2.target)) {
            let { id: i2 } = t2.target;
            i2 || (i2 = e("scrollspy"), t2.target.id = i2), t2.target = "#" + i2;
          }
          return l("scrollspy", t2, Ze), t2;
        }
        _getScrollTop() {
          return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
        }
        _getScrollHeight() {
          return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
        }
        _getOffsetHeight() {
          return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
        }
        _process() {
          const t2 = this._getScrollTop() + this._config.offset, e2 = this._getScrollHeight(), i2 = this._config.offset + e2 - this._getOffsetHeight();
          if (this._scrollHeight !== e2 && this.refresh(), t2 >= i2) {
            const t3 = this._targets[this._targets.length - 1];
            this._activeTarget !== t3 && this._activate(t3);
          } else {
            if (this._activeTarget && t2 < this._offsets[0] && this._offsets[0] > 0)
              return this._activeTarget = null, void this._clear();
            for (let e3 = this._offsets.length; e3--; )
              this._activeTarget !== this._targets[e3] && t2 >= this._offsets[e3] && (void 0 === this._offsets[e3 + 1] || t2 < this._offsets[e3 + 1]) && this._activate(this._targets[e3]);
          }
        }
        _activate(e2) {
          this._activeTarget = e2, this._clear();
          const i2 = this._selector.split(",").map((t2) => `${t2}[data-bs-target="${e2}"],${t2}[href="${e2}"]`), n2 = t.findOne(i2.join(","));
          n2.classList.contains("dropdown-item") ? (t.findOne(".dropdown-toggle", n2.closest(".dropdown")).classList.add("active"), n2.classList.add("active")) : (n2.classList.add("active"), t.parents(n2, ".nav, .list-group").forEach((e3) => {
            t.prev(e3, ".nav-link, .list-group-item").forEach((t2) => t2.classList.add("active")), t.prev(e3, ".nav-item").forEach((e4) => {
              t.children(e4, ".nav-link").forEach((t2) => t2.classList.add("active"));
            });
          })), P.trigger(this._scrollElement, "activate.bs.scrollspy", { relatedTarget: e2 });
        }
        _clear() {
          t.find(this._selector).filter((t2) => t2.classList.contains("active")).forEach((t2) => t2.classList.remove("active"));
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            const e2 = Je.getOrCreateInstance(this, t2);
            if ("string" == typeof t2) {
              if (void 0 === e2[t2])
                throw new TypeError(`No method named "${t2}"`);
              e2[t2]();
            }
          });
        }
      }
      P.on(window, "load.bs.scrollspy.data-api", () => {
        t.find('[data-bs-spy="scroll"]').forEach((t2) => new Je(t2));
      }), _(Je);
      class ti extends B {
        static get NAME() {
          return "tab";
        }
        show() {
          if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && this._element.classList.contains("active"))
            return;
          let e2;
          const i2 = s(this._element), n2 = this._element.closest(".nav, .list-group");
          if (n2) {
            const i3 = "UL" === n2.nodeName || "OL" === n2.nodeName ? ":scope > li > .active" : ".active";
            e2 = t.find(i3, n2), e2 = e2[e2.length - 1];
          }
          const o2 = e2 ? P.trigger(e2, "hide.bs.tab", { relatedTarget: this._element }) : null;
          if (P.trigger(this._element, "show.bs.tab", { relatedTarget: e2 }).defaultPrevented || null !== o2 && o2.defaultPrevented)
            return;
          this._activate(this._element, n2);
          const r2 = () => {
            P.trigger(e2, "hidden.bs.tab", { relatedTarget: this._element }), P.trigger(this._element, "shown.bs.tab", { relatedTarget: e2 });
          };
          i2 ? this._activate(i2, i2.parentNode, r2) : r2();
        }
        _activate(e2, i2, n2) {
          const s2 = (!i2 || "UL" !== i2.nodeName && "OL" !== i2.nodeName ? t.children(i2, ".active") : t.find(":scope > li > .active", i2))[0], o2 = n2 && s2 && s2.classList.contains("fade"), r2 = () => this._transitionComplete(e2, s2, n2);
          s2 && o2 ? (s2.classList.remove("show"), this._queueCallback(r2, e2, true)) : r2();
        }
        _transitionComplete(e2, i2, n2) {
          if (i2) {
            i2.classList.remove("active");
            const e3 = t.findOne(":scope > .dropdown-menu .active", i2.parentNode);
            e3 && e3.classList.remove("active"), "tab" === i2.getAttribute("role") && i2.setAttribute("aria-selected", false);
          }
          e2.classList.add("active"), "tab" === e2.getAttribute("role") && e2.setAttribute("aria-selected", true), f(e2), e2.classList.contains("fade") && e2.classList.add("show");
          let s2 = e2.parentNode;
          if (s2 && "LI" === s2.nodeName && (s2 = s2.parentNode), s2 && s2.classList.contains("dropdown-menu")) {
            const i3 = e2.closest(".dropdown");
            i3 && t.find(".dropdown-toggle", i3).forEach((t2) => t2.classList.add("active")), e2.setAttribute("aria-expanded", true);
          }
          n2 && n2();
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            const e2 = ti.getOrCreateInstance(this);
            if ("string" == typeof t2) {
              if (void 0 === e2[t2])
                throw new TypeError(`No method named "${t2}"`);
              e2[t2]();
            }
          });
        }
      }
      P.on(document, "click.bs.tab.data-api", '[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]', function(t2) {
        ["A", "AREA"].includes(this.tagName) && t2.preventDefault(), h(this) || ti.getOrCreateInstance(this).show();
      }), _(ti);
      const ei = { animation: "boolean", autohide: "boolean", delay: "number" }, ii = { animation: true, autohide: true, delay: 5e3 };
      class ni extends B {
        constructor(t2, e2) {
          super(t2), this._config = this._getConfig(e2), this._timeout = null, this._hasMouseInteraction = false, this._hasKeyboardInteraction = false, this._setListeners();
        }
        static get DefaultType() {
          return ei;
        }
        static get Default() {
          return ii;
        }
        static get NAME() {
          return "toast";
        }
        show() {
          P.trigger(this._element, "show.bs.toast").defaultPrevented || (this._clearTimeout(), this._config.animation && this._element.classList.add("fade"), this._element.classList.remove("hide"), f(this._element), this._element.classList.add("showing"), this._queueCallback(() => {
            this._element.classList.remove("showing"), this._element.classList.add("show"), P.trigger(this._element, "shown.bs.toast"), this._maybeScheduleHide();
          }, this._element, this._config.animation));
        }
        hide() {
          this._element.classList.contains("show") && (P.trigger(this._element, "hide.bs.toast").defaultPrevented || (this._element.classList.remove("show"), this._queueCallback(() => {
            this._element.classList.add("hide"), P.trigger(this._element, "hidden.bs.toast");
          }, this._element, this._config.animation)));
        }
        dispose() {
          this._clearTimeout(), this._element.classList.contains("show") && this._element.classList.remove("show"), super.dispose();
        }
        _getConfig(t2) {
          return t2 = { ...ii, ...U.getDataAttributes(this._element), ..."object" == typeof t2 && t2 ? t2 : {} }, l("toast", t2, this.constructor.DefaultType), t2;
        }
        _maybeScheduleHide() {
          this._config.autohide && (this._hasMouseInteraction || this._hasKeyboardInteraction || (this._timeout = setTimeout(() => {
            this.hide();
          }, this._config.delay)));
        }
        _onInteraction(t2, e2) {
          switch (t2.type) {
            case "mouseover":
            case "mouseout":
              this._hasMouseInteraction = e2;
              break;
            case "focusin":
            case "focusout":
              this._hasKeyboardInteraction = e2;
          }
          if (e2)
            return void this._clearTimeout();
          const i2 = t2.relatedTarget;
          this._element === i2 || this._element.contains(i2) || this._maybeScheduleHide();
        }
        _setListeners() {
          P.on(this._element, "click.dismiss.bs.toast", '[data-bs-dismiss="toast"]', () => this.hide()), P.on(this._element, "mouseover.bs.toast", (t2) => this._onInteraction(t2, true)), P.on(this._element, "mouseout.bs.toast", (t2) => this._onInteraction(t2, false)), P.on(this._element, "focusin.bs.toast", (t2) => this._onInteraction(t2, true)), P.on(this._element, "focusout.bs.toast", (t2) => this._onInteraction(t2, false));
        }
        _clearTimeout() {
          clearTimeout(this._timeout), this._timeout = null;
        }
        static jQueryInterface(t2) {
          return this.each(function() {
            const e2 = ni.getOrCreateInstance(this, t2);
            if ("string" == typeof t2) {
              if (void 0 === e2[t2])
                throw new TypeError(`No method named "${t2}"`);
              e2[t2](this);
            }
          });
        }
      }
      return _(ni), { Alert: W, Button: q, Carousel: Z, Collapse: et, Dropdown: Ae, Modal: De, Offcanvas: Ne, Popover: Qe, ScrollSpy: Je, Tab: ti, Toast: ni, Tooltip: Fe };
    });
  }
});
export default require_bootstrap_bundle_min();
/*! Bundled license information:

bootstrap/dist/js/bootstrap.bundle.min.js:
  (*!
    * Bootstrap v5.0.2 (https://getbootstrap.com/)
    * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
    * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
    *)
*/
//# sourceMappingURL=bootstrap_dist_js_bootstrap__bundle__min__js.js.map
